<?xml version="1.0"?><project>
<!--
 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 #
 # Copyright 1997-2007 Sun Microsystems, Inc. All Rights Reserved.
 #
 # The contents of this file are subject to the terms of the Common 
 # Development and Distribution License ("CDDL")(the "License"). You 
 # may not use this file except in compliance with the License.
 #
 # You can obtain a copy of the License at
 # https://open-esb.dev.java.net/public/CDDLv1.0.html
 # or mural/license.txt. See the License for the specific language 
 # governing permissions and limitations under the License.  
 #
 # When distributing Covered Code, include this CDDL Header Notice 
 # in each file and include the License file at mural/license.txt.
 # If applicable, add the following below the CDDL Header, with the 
 # fields enclosed by brackets [] replaced by your own identifying 
 # information: "Portions Copyrighted [year] [name of copyright owner]"
-->

  <parent>
    <artifactId>open-dm-mi</artifactId>
    <groupId>mural</groupId>
    <version>1.0</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <modelVersion>4.0.0</modelVersion>
  <groupId>mural</groupId>
  <artifactId>index-services-jar</artifactId>
  <name>Master Index EDM Services</name>
  <version>${mural.currentVersion}</version>
  <url>http://maven.apache.org</url>
  <build>
    <testSourceDirectory>src/test/java</testSourceDirectory>
    <testOutputDirectory>target/test-classes</testOutputDirectory>
    <finalName>com-sun-mdm-index-services</finalName>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <excludes/>
      </resource>
    </resources>
    <plugins>
	    <plugin>
	      <groupId>org.apache.maven.plugins</groupId>
	      <artifactId>maven-compiler-plugin</artifactId>
	      <configuration>
	        <source>1.5</source>
	        <target>1.5</target>
	      </configuration>
	    </plugin>
	    <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
                <execution>
                    <id>extract-globalized-messages</id>
                    <phase>process-classes</phase>
                    <goals><goal>run</goal></goals>
                    <configuration>
                        <tasks>
                            <taskdef name="i18n" classname="net.java.hulp.i18n.buildtools.I18NTask">
                                <classpath refid="maven.test.classpath"/>
                            </taskdef>
                            <i18n dir="${project.build.directory}/classes" file="${basedir}/src/main/resources/com/sun/mdm/index/util/services_msgs.properties" prefix="MDM-MI-" strict="false" pattern="([A-Z][A-Z][A-Z]\d\d\d)(: )(.*)" />               
                        </tasks> 
                    </configuration>
                </execution>
                <execution>
                    <id>copy-JUnit-test-resource-files</id>
                    <phase>generate-test-sources</phase>
                    <goals><goal>run</goal></goals>
                    <configuration>
                        <tasks>
                            <unzip src="${settings.localRepository}/mural/matcher-resources/1.0/matcher-resources-1.0.jar" 
                                dest="${project.build.testOutputDirectory}"/>
                            <copy todir="${project.build.directory}/test-classes/com/sun/mdm/standardizer">
                                    <fileset dir="../../open-dm-dq/standardizer/dist">
                                        <include name="repositoryImage.zip"/>
                                    </fileset>
                            </copy>
                        </tasks>          
                    </configuration>
                </execution>
                <execution>
                    <id>run-JUnit-test</id>
                    <phase>test</phase>
                    <goals><goal>run</goal></goals>
                    <configuration>
                        <tasks>
                            <taskdef resource="net/sf/antcontrib/antcontrib.properties">
                                <classpath refid="maven.test.classpath"/>
                            </taskdef>
                            <taskdef name="propertyfile" classname="org.apache.tools.ant.taskdefs.optional.PropertyFile">
                                <classpath refid="maven.test.classpath"/>
                            </taskdef>
                            <!--You may overwrite database properties in 
                            ProxyJNDI.properties.Oracle file and ProxyJNDI.properties.SQLServer 
                            file by setting corresponding properties in setting.xml file-->
                            <if>
                                <equals arg1="${database.properties.overwrite}" 
                                        arg2="true" />
                            <then>
                                <propertyfile file="${basedir}/../index-core/target/test-classes/com/sun/mdm/index/util/ejbproxy/ProxyJNDI.properties.Oracle">
                                    <entry key="proxy.datasource.user.id" value="${oracle.datasource.user.id}"/>
                                    <entry key="proxy.datasource.password" value="${oracle.datasource.password}"/>
                                    <entry key="proxy.datasource.port.number" value="${oracle.datasource.port.number}"/>                                    
                                    <entry key="proxy.datasource.server.name" value="${oracle.datasource.server.name}"/>
                                    <entry key="proxy.datasource.name" value="${oracle.datasource.name}"/>
                                </propertyfile>
                                <propertyfile file="${basedir}/../index-core/target/test-classes/com/sun/mdm/index/util/ejbproxy/ProxyJNDI.properties.SQLServer">
                                    <entry key="proxy.datasource.user.id" value="${sqlserver.datasource.user.id}"/>
                                    <entry key="proxy.datasource.password" value="${sqlserver.datasource.password}"/>
                                    <entry key="proxy.datasource.port.number" value="${sqlserver.datasource.port.number}"/>                                    
                                    <entry key="proxy.datasource.server.name" value="${sqlserver.datasource.server.name}"/>
                                    <entry key="proxy.datasource.name" value="${sqlserver.datasource.name}"/>
                                </propertyfile> 
                            </then>
                            </if>
                            
                            <if>
                                <equals arg1="${env.RUN_JUNIT}" arg2="oracle" />
                            <then>
                                <echo>::Oracle JUnit Test</echo>
                                <ant antfile="junitTest.xml" target="runtests_oracle">
                                    <property name="build.dir" value="${project.build.directory}"/>
                                    <property name="test.src.dir" value="${project.build.testSourceDirectory}"/>
                                    <property name="build.test.classes.dir" value="${project.build.testOutputDirectory}"/>
                                    <property name="run.test.classpath" refid="maven.test.classpath"/>
                                    <property name="compile.classpath" refid="maven.compile.classpath"/>
                                    <property name="localRepository.path" value="${settings.localRepository}"/>
                                </ant>
                            </then>                                
                            <elseif>
                                <equals arg1="${env.RUN_JUNIT}" arg2="sqlserver" />
                            <then>
                                <echo>::SQL Server JUnit Test</echo>
                                <ant antfile="junitTest.xml" target="runtests_sqlserver">
                                    <property name="build.dir" value="${project.build.directory}"/>
                                    <property name="test.src.dir" value="${project.build.testSourceDirectory}"/>
                                    <property name="build.test.classes.dir" value="${project.build.testOutputDirectory}"/>
                                    <property name="run.test.classpath" refid="maven.test.classpath"/>
                                    <property name="compile.classpath" refid="maven.compile.classpath"/>
                                    <property name="localRepository.path" value="${settings.localRepository}"/>
                                </ant>
                            </then>
                            </elseif>
                            <elseif>
                                <equals arg1="${env.RUN_JUNIT}" arg2="all" />
                            <then>
                                <echo>::ALL JUnit Test</echo>
                                <ant antfile="junitTest.xml">
                                    <property name="build.dir" value="${project.build.directory}"/>
                                    <property name="test.src.dir" value="${project.build.testSourceDirectory}"/>
                                    <property name="build.test.classes.dir" value="${project.build.testOutputDirectory}"/>
                                    <property name="run.test.classpath" refid="maven.test.classpath"/>
                                    <property name="compile.classpath" refid="maven.compile.classpath"/>
                                    <property name="localRepository.path" value="${settings.localRepository}"/>
                                </ant>
                            </then>
                            </elseif>                                  
                            <else>
                                <echo>::NO JUnit Test</echo>
                            </else>
                            </if>                      
                        </tasks> 
                    </configuration>
                </execution>
            </executions>
        </plugin>
        <plugin>
           <groupId>org.apache.maven.plugins</groupId>
           <artifactId>maven-surefire-plugin</artifactId>
           <version>2.4.1</version>
           <configuration>
               <skipTests>true</skipTests>
               <testFailureIgnore>true</testFailureIgnore>
           </configuration>
        </plugin> 
        </plugins>
    </build>
  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>ant-contrib</groupId>
        <artifactId>ant-contrib</artifactId>
        <version>1.0b2</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>ant</groupId>
        <artifactId>ant-nodeps</artifactId>
        <version>1.6.5</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>ant</groupId>
        <artifactId>ant-junit</artifactId>
        <version>1.6.5</version>
        <scope>test</scope>
    </dependency>
    <dependency>
        <groupId>net.java.hulp.i18ntask</groupId>
        <artifactId>net.java.hulp.i18ntask</artifactId>
        <version>2.1-SNAPSHOT</version>
    </dependency>
    <dependency>
        <groupId>net.java.hulp.i18n</groupId>
        <artifactId>net.java.hulp.i18n</artifactId>
        <version>2.1-SNAPSHOT</version>
    </dependency>
    <dependency>
	      <groupId>ant-contrib</groupId>
	      <artifactId>ant-contrib</artifactId>
	      <version>1.0b2</version>
	      <scope>provided</scope>
	  </dependency>
	<dependency>
		<groupId>mural</groupId>
		<artifactId>index-core</artifactId>
		<version>${mural.currentVersion}</version>
	</dependency>
    <dependency>
      <groupId>javax.servlet</groupId>
      <artifactId>servlet-api</artifactId>
      <version>2.5</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>javaee</groupId>
      <artifactId>javaee-api</artifactId>
      <version>5</version>
      <scope>provided</scope>
    </dependency>
    <!--dependency>
      <groupId>appserv-rt</groupId>
      <artifactId>appserv-rt.jar</artifactId>
      <version>5</version>
      <scope>provided</scope>
    </dependency-->
  </dependencies>
</project>
