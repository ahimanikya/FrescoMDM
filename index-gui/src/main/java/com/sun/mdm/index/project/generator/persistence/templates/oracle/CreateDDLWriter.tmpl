[SBYNTAG:DEFINE:nodelist()]
CREATE TABLE SBYN_SYSTEMS
(
    SYSTEMCODE		VARCHAR2(20)	NOT NULL,
    DESCRIPTION		VARCHAR2(50)	NOT NULL,
    STATUS		CHAR		NOT NULL,
    ID_LENGTH		INTEGER		NOT NULL,
    FORMAT		VARCHAR2(60)	NULL    ,
    INPUT_MASK		VARCHAR2(60)	NULL    ,
    VALUE_MASK		VARCHAR2(60)	NULL    ,
    CREATE_DATE		DATE		NOT NULL,
    CREATE_USERID	VARCHAR2(20)	NOT NULL,
    UPDATE_DATE		DATE		NULL    ,
    UPDATE_USERID	VARCHAR2(20)	NULL    ,
    CONSTRAINT PK_SBYN_SYSTEM PRIMARY KEY (SYSTEMCODE)
        USING INDEX
);

CREATE TABLE SBYN_USER_CODE
(
    CODE_LIST		VARCHAR2(20)	NOT NULL,
    CODE			VARCHAR2(20)	NOT NULL,
    DESCR			VARCHAR2(50)	NOT NULL,
    FORMAT			VARCHAR2(60)	NULL    ,
    INPUT_MASK		VARCHAR2(60)	NULL    ,
    VALUE_MASK		VARCHAR2(60)	NULL    ,
    CONSTRAINT PK_SBYN_USER_CODE PRIMARY KEY (CODE_LIST, CODE)
        USING INDEX
);

CREATE TABLE SBYN_SYSTEMOBJECT (
	SYSTEMCODE VARCHAR2(20),
	LID VARCHAR2(25),
	CHILDTYPE VARCHAR2(20),
	CREATEUSER VARCHAR2(30),
	CREATEFUNCTION VARCHAR2(20),
	CREATEDATE DATE,
	UPDATEUSER VARCHAR2(30),
	UPDATEFUNCTION VARCHAR2(20),
	UPDATEDATE DATE,
	STATUS VARCHAR2(15));

ALTER TABLE SBYN_SYSTEMOBJECT ADD CONSTRAINT PK_SBYNSYSTEMOBJECT PRIMARY KEY (SYSTEMCODE, LID);
ALTER TABLE SBYN_SYSTEMOBJECT ADD CONSTRAINT FK_SYSTEMOBJECT_SYSTEMCODE FOREIGN KEY (SYSTEMCODE) REFERENCES SBYN_SYSTEMS(SYSTEMCODE);

CREATE TABLE SBYN_SYSTEMSBR (
	EUID VARCHAR2(20),
	CHILDTYPE VARCHAR2(20),
	CREATESYSTEM VARCHAR2(20),
	CREATEUSER VARCHAR2(30),
	CREATEFUNCTION VARCHAR2(20),
	CREATEDATE DATE,
	UPDATESYSTEM VARCHAR2(20),
	UPDATEUSER VARCHAR2(30),
	UPDATEFUNCTION VARCHAR2(20),
	UPDATEDATE DATE,
	STATUS VARCHAR2(15),
      REVISIONNUMBER NUMBER(38));

ALTER TABLE SBYN_SYSTEMSBR ADD CONSTRAINT PK_SBYNSYSTEMSBR PRIMARY KEY (EUID);

CREATE TABLE SBYN_OVERWRITE (
	EUID VARCHAR2(20),
	PATH VARCHAR2(200),
	TYPE VARCHAR2(20),
	INTEGERDATA NUMBER(38),
	BOOLEANDATA NUMBER(38),
	STRINGDATA VARCHAR2(200),
	BYTEDATA CHAR(2),
	LONGDATA LONG,
	DATEDATA DATE,
	FLOATDATA NUMBER(38, 4),
	TIMESTAMPDATA DATE);

ALTER TABLE SBYN_OVERWRITE ADD CONSTRAINT FK_SYSTEMSBR_EUID FOREIGN KEY (EUID) REFERENCES SBYN_SYSTEMSBR(EUID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SBYN_OVERWRITE ADD CONSTRAINT PK_SBROVERWRITE PRIMARY KEY (EUID, PATH);

CREATE TABLE SBYN_ENTERPRISE (
	SYSTEMCODE VARCHAR2(20),
	LID VARCHAR2(25),
	EUID VARCHAR2(20));

ALTER TABLE SBYN_ENTERPRISE ADD CONSTRAINT FK_ENTERPRISE_SYSTEMCODE_LID FOREIGN KEY (SYSTEMCODE, LID) REFERENCES SBYN_SYSTEMOBJECT(SYSTEMCODE, LID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SBYN_ENTERPRISE ADD CONSTRAINT FK_ENTERPRISE_EUID FOREIGN KEY (EUID) REFERENCES SBYN_SYSTEMSBR(EUID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SBYN_ENTERPRISE ADD CONSTRAINT PK_ENTERPRISE PRIMARY KEY (SYSTEMCODE, LID, EUID);

CREATE TABLE SBYN_TRANSACTION (
	TRANSACTIONNUMBER VARCHAR2(20),
	LID1 VARCHAR2(25),
	LID2 VARCHAR2(25),
	EUID1 VARCHAR2(20),
	EUID2 VARCHAR2(20),
	FUNCTION VARCHAR2(20),
	SYSTEMUSER VARCHAR2(30),
	TIMESTAMP TIMESTAMP,
	DELTA BLOB,
	SYSTEMCODE VARCHAR2(20),
	LID VARCHAR2(25),
	EUID VARCHAR2(20));

ALTER TABLE SBYN_TRANSACTION ADD CONSTRAINT PK_TRANSACTION PRIMARY KEY (TRANSACTIONNUMBER);
ALTER TABLE SBYN_TRANSACTION ADD CONSTRAINT AK_TRANSACTION UNIQUE (EUID, EUID2, TRANSACTIONNUMBER);

CREATE TABLE SBYN_ASSUMEDMATCH (
    ASSUMEDMATCHID VARCHAR2(20),
    EUID VARCHAR2(20),
    SYSTEMCODE VARCHAR2(20),
	LID VARCHAR2(25),
    WEIGHT VARCHAR2(20),
    TRANSACTIONNUMBER VARCHAR(20));
    

ALTER TABLE SBYN_ASSUMEDMATCH ADD CONSTRAINT FK_AM_TRANSACTIONNUMBER FOREIGN KEY (TRANSACTIONNUMBER) REFERENCES SBYN_TRANSACTION(TRANSACTIONNUMBER);

CREATE TABLE SBYN_POTENTIALDUPLICATES (
	POTENTIALDUPLICATEID VARCHAR2(20),
	WEIGHT VARCHAR2(20),
	TYPE VARCHAR2(15),
	DESCRIPTION VARCHAR2(120),
	STATUS VARCHAR2(15),
	HIGHMATCHFLAG VARCHAR2(15),
	RESOLVEDUSER VARCHAR2(30),
	RESOLVEDDATE DATE,
	RESOLVEDCOMMENT VARCHAR2(120),
	EUID2 VARCHAR2(20),
	TRANSACTIONNUMBER VARCHAR2(20),
	EUID1 VARCHAR2(20));

ALTER TABLE SBYN_POTENTIALDUPLICATES ADD CONSTRAINT PK_POTENTIALDUPLICATES PRIMARY KEY (POTENTIALDUPLICATEID);

CREATE TABLE SBYN_AUDIT (
	AUDIT_ID VARCHAR2(20) NOT NULL,
	PRIMARY_OBJECT_TYPE VARCHAR2(20) ,
	EUID VARCHAR2(20) ,
	EUID_AUX VARCHAR2(20),
	FUNCTION VARCHAR2(32) NOT NULL,
	DETAIL VARCHAR2(120),
	CREATE_DATE DATE NOT NULL,
	CREATE_BY VARCHAR2(20) NOT NULL);

ALTER TABLE SBYN_AUDIT ADD CONSTRAINT PK_SBYN_AUDIT PRIMARY KEY (AUDIT_ID);

CREATE TABLE SBYN_MERGE (
	MERGE_ID VARCHAR2(20) NOT NULL,
    KEPT_EUID VARCHAR2(20) NOT NULL,
    MERGED_EUID VARCHAR2(20),
    MERGE_TRANSACTIONNUM VARCHAR2(20) NOT NULL,
    UNMERGE_TRANSACTIONNUM VARCHAR2(20));

ALTER TABLE SBYN_MERGE ADD CONSTRAINT FK_SBYN_MERGE FOREIGN KEY (KEPT_EUID, MERGED_EUID, MERGE_TRANSACTIONNUM) REFERENCES SBYN_TRANSACTION(EUID, EUID2, TRANSACTIONNUMBER) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SBYN_MERGE ADD CONSTRAINT PK_SBYN_MERGE PRIMARY KEY (MERGE_ID);

CREATE TABLE SBYN_APPL
(
    APPL_ID                  NUMBER(10)             NOT NULL,
    CODE                     VARCHAR2(8)            NOT NULL,
    DESCR                    VARCHAR2(30)           NOT NULL,
    READ_ONLY                CHAR(1)                DEFAULT 'N' NOT NULL
        CONSTRAINT CHK_SBYN_APPL CHECK (READ_ONLY IN ('Y','N')),
    CREATE_DATE              DATE                   NOT NULL,
    CREATE_USERID            VARCHAR2(20)           NOT NULL,
    CONSTRAINT PK_UP_SBYN_APPL PRIMARY KEY (APPL_ID)
)
;
CREATE UNIQUE INDEX SBYN_APPL_IDX1 ON SBYN_APPL (CODE ASC);

CREATE TABLE SBYN_COMMON_HEADER
(
    COMMON_HEADER_ID         NUMBER(10)             NOT NULL,
    APPL_ID                  NUMBER(10)             NOT NULL,
    CODE                     VARCHAR2(8)            NOT NULL,
    DESCR                    VARCHAR2(50)           NOT NULL,
    READ_ONLY                CHAR(1)                DEFAULT 'N' NOT NULL,
    MAX_INPUT_LEN            NUMBER(10)             DEFAULT 1 NOT NULL,
    TYP_TABLE_CODE           VARCHAR2(3)            NOT NULL,
    CREATE_DATE              DATE                   NOT NULL,
    CREATE_USERID            VARCHAR2(20)           NOT NULL,
    CONSTRAINT PK_SBYN_COMMON_HEADER PRIMARY KEY (COMMON_HEADER_ID)
)
;
CREATE INDEX FK_SBYN_COMMON_HEADER ON SBYN_COMMON_HEADER (APPL_ID ASC);
CREATE UNIQUE INDEX SBYN_COMMOM_HEADER_IDX1 ON SBYN_COMMON_HEADER (APPL_ID ASC, CODE ASC);

CREATE TABLE SBYN_COMMON_DETAIL
(
    COMMON_DETAIL_ID         NUMBER(10)             NOT NULL
        CONSTRAINT CHK_COMMON_DETAIL_ID CHECK (COMMON_DETAIL_ID >= 0),
    COMMON_HEADER_ID         NUMBER(10)             NOT NULL,
    CODE                     VARCHAR2(20)           NOT NULL,
    DESCR                    VARCHAR2(50)           NOT NULL,
    READ_ONLY                CHAR(1)                DEFAULT 'N' NOT NULL
        CONSTRAINT CHK_SBYN_COMMON_DETAIL CHECK (READ_ONLY IN ('Y','N')),
    CREATE_DATE              DATE                   NOT NULL,
    CREATE_USERID            VARCHAR2(20)           NOT NULL,
    CONSTRAINT PK_SBYN_COMMON_DETAIL PRIMARY KEY (COMMON_DETAIL_ID)
)
;
CREATE UNIQUE INDEX SBYN_COMMOM_DETAIL_IDX1 ON SBYN_COMMON_DETAIL (COMMON_HEADER_ID ASC, CODE ASC);

ALTER TABLE SBYN_COMMON_DETAIL
    ADD CONSTRAINT FK_COMM_DET_COMM_HEAD FOREIGN KEY  (COMMON_HEADER_ID)
       REFERENCES SBYN_COMMON_HEADER (COMMON_HEADER_ID)
;

CREATE INDEX SBYN_ENTERPRISE1 on SBYN_ENTERPRISE (EUID ASC);
CREATE INDEX SBYN_TRANSACTION1 on SBYN_TRANSACTION (EUID ASC, TIMESTAMP ASC);
CREATE INDEX SBYN_TRANSACTION2 on SBYN_TRANSACTION (FUNCTION ASC, TIMESTAMP ASC);
CREATE INDEX SBYN_TRANSACTION3 on SBYN_TRANSACTION (TIMESTAMP ASC, TRANSACTIONNUMBER ASC);
CREATE INDEX SBYN_TRANSACTION4 on SBYN_TRANSACTION (EUID2 ASC, TIMESTAMP ASC);
ALTER TABLE SBYN_ASSUMEDMATCH ADD CONSTRAINT PK_ASSUMEDMATCH PRIMARY KEY (ASSUMEDMATCHID);
CREATE INDEX SBYN_ASSUMEDMATCH1 on SBYN_ASSUMEDMATCH (EUID ASC);
CREATE INDEX SBYN_ASSUMEDMATCH2 ON SBYN_ASSUMEDMATCH (TRANSACTIONNUMBER ASC);
CREATE INDEX SBYN_POTENTIALDUPLICATES1 on SBYN_POTENTIALDUPLICATES (EUID1 ASC);
CREATE INDEX SBYN_POTENTIALDUPLICATES2 on SBYN_POTENTIALDUPLICATES (EUID2 ASC);
CREATE INDEX SBYN_POTENTIALDUPLICATES3 ON SBYN_POTENTIALDUPLICATES (TRANSACTIONNUMBER ASC);
CREATE INDEX SBYN_AUDIT1 on SBYN_AUDIT (EUID ASC);
CREATE INDEX SBYN_AUDIT2 on SBYN_AUDIT (CREATE_DATE ASC);
CREATE INDEX SBYN_MERGE1 on SBYN_MERGE (KEPT_EUID ASC);
CREATE INDEX SBYN_MERGE2 on SBYN_MERGE (MERGED_EUID ASC);

[SBYNTAG:DEFINE:rootnode,fieldnames(),fieldtypes(),keys]
CREATE TABLE SBYN_[sbyntag:rootnode.toUpperCase] (
	SYSTEMCODE VARCHAR2(20),
	LID VARCHAR2(25),
	[sbyntag:rootnode.toUpperCase]ID VARCHAR2(20),
[SBYNTAG:PARAM-BEGIN]	
	[sbyntag:fieldnames().toUpperCase] [sbyntag:fieldtypes()],
[SBYNTAG:PARAM-END]
		;

ALTER TABLE SBYN_[sbyntag:rootnode.toUpperCase] ADD CONSTRAINT FK_[sbyntag:rootnode.toUpperCase]_SYSTEMCODE_LID FOREIGN KEY (SYSTEMCODE, LID) REFERENCES SBYN_SYSTEMOBJECT(SYSTEMCODE, LID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SBYN_[sbyntag:rootnode.toUpperCase] ADD CONSTRAINT PK_[sbyntag:rootnode.toUpperCase] PRIMARY KEY ([sbyntag:rootnode.toUpperCase]ID);
ALTER TABLE SBYN_[sbyntag:rootnode.toUpperCase] ADD CONSTRAINT U_[sbyntag:rootnode.toUpperCase] UNIQUE (SYSTEMCODE, LID[sbyntag:keys.toUpperCase]) DEFERRABLE INITIALLY DEFERRED;

CREATE TABLE SBYN_[sbyntag:rootnode.toUpperCase]SBR (
	EUID VARCHAR2(20),
	[sbyntag:rootnode.toUpperCase]ID VARCHAR2(20),
[SBYNTAG:PARAM-BEGIN]	
	[sbyntag:fieldnames().toUpperCase] [sbyntag:fieldtypes()],
[SBYNTAG:PARAM-END]
		;
	
ALTER TABLE SBYN_[sbyntag:rootnode.toUpperCase]SBR ADD CONSTRAINT FK_[sbyntag:rootnode.toUpperCase]SBR_EUID FOREIGN KEY (EUID) REFERENCES SBYN_SYSTEMSBR(EUID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SBYN_[sbyntag:rootnode.toUpperCase]SBR ADD CONSTRAINT PK_[sbyntag:rootnode.toUpperCase]SBR PRIMARY KEY ([sbyntag:rootnode.toUpperCase]ID);
ALTER TABLE SBYN_[sbyntag:rootnode.toUpperCase]SBR ADD CONSTRAINT U_[sbyntag:rootnode.toUpperCase]SBR UNIQUE (EUID[sbyntag:keys.toUpperCase]) DEFERRABLE INITIALLY DEFERRED;

[SBYNTAG:DEFINE:()pname,sname,fieldnames(),fieldtypes(),keys]
CREATE TABLE SBYN_[sbyntag:sname.toUpperCase] (
	[sbyntag:pname.toUpperCase]ID VARCHAR2(20),
	[sbyntag:sname.toUpperCase]ID VARCHAR2(20),
[SBYNTAG:PARAM-BEGIN]
	[sbyntag:fieldnames().toUpperCase] [sbyntag:fieldtypes().toUpperCase],
[SBYNTAG:PARAM-END]
		;

ALTER TABLE SBYN_[sbyntag:sname.toUpperCase] ADD CONSTRAINT FK_[sbyntag:sname.toUpperCase]_[sbyntag:pname.toUpperCase]ID FOREIGN KEY ([sbyntag:pname.toUpperCase]ID) REFERENCES SBYN_[sbyntag:pname.toUpperCase]([sbyntag:pname.toUpperCase]ID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SBYN_[sbyntag:sname.toUpperCase] ADD CONSTRAINT PK_[sbyntag:sname.toUpperCase] PRIMARY KEY ([sbyntag:sname.toUpperCase]ID);
ALTER TABLE SBYN_[sbyntag:sname.toUpperCase] ADD CONSTRAINT U_[sbyntag:sname.toUpperCase] UNIQUE ([sbyntag:pname.toUpperCase]ID[sbyntag:keys.toUpperCase]) DEFERRABLE INITIALLY DEFERRED;

CREATE TABLE SBYN_[sbyntag:sname.toUpperCase]SBR (
	[sbyntag:pname.toUpperCase]ID VARCHAR2(20),
	[sbyntag:sname.toUpperCase]ID VARCHAR2(20),
[SBYNTAG:PARAM-BEGIN]
	[sbyntag:fieldnames().toUpperCase] [sbyntag:fieldtypes().toUpperCase],
[SBYNTAG:PARAM-END]
		;

ALTER TABLE SBYN_[sbyntag:sname.toUpperCase]SBR ADD CONSTRAINT FK_[sbyntag:sname.toUpperCase]SBR_[sbyntag:pname.toUpperCase]ID FOREIGN KEY ([sbyntag:pname.toUpperCase]ID) REFERENCES SBYN_[sbyntag:pname.toUpperCase]SBR([sbyntag:pname.toUpperCase]ID) DEFERRABLE INITIALLY DEFERRED;
ALTER TABLE SBYN_[sbyntag:sname.toUpperCase]SBR ADD CONSTRAINT PK_[sbyntag:sname.toUpperCase]SBR PRIMARY KEY ([sbyntag:sname.toUpperCase]ID);
ALTER TABLE SBYN_[sbyntag:sname.toUpperCase]SBR ADD CONSTRAINT U_[sbyntag:sname.toUpperCase]SBR UNIQUE ([sbyntag:pname.toUpperCase]ID[sbyntag:keys.toUpperCase]) DEFERRABLE INITIALLY DEFERRED;

[SBYNTAG:DEFINE:nodelist(),systemcode()]
CREATE TABLE SBYN_SEQ_TABLE (
	SEQ_NAME VARCHAR2(20),
	SEQ_COUNT NUMBER(38));

ALTER TABLE SBYN_SEQ_TABLE ADD CONSTRAINT U_SEQ_NAME UNIQUE (SEQ_NAME);

CREATE OR REPLACE FUNCTION SEQMGR (Seq_Name_In IN VARCHAR2, Chunk_Size_In IN INTEGER) RETURN INTEGER
IS
PRAGMA AUTONOMOUS_TRANSACTION;

   Count_out INTEGER := 0;
BEGIN
   Count_out := 0;

   UPDATE SBYN_SEQ_TABLE SET seq_count = seq_count+Chunk_Size_In WHERE seq_name = Seq_Name_In;
   SELECT seq_count-Chunk_Size_In  INTO Count_out FROM SBYN_SEQ_TABLE WHERE seq_name = Seq_Name_In;
   COMMIT;

   RETURN Count_out;
EXCEPTION
    WHEN OTHERS THEN
        RETURN 0;
END SEQMGR;
/

INSERT INTO SBYN_SEQ_TABLE VALUES ('EUID', 0);
INSERT INTO SBYN_SEQ_TABLE VALUES ('POTENTIALDUPLICATE', 0);
INSERT INTO SBYN_SEQ_TABLE VALUES ('TRANSACTIONNUMBER', 0);
INSERT INTO SBYN_SEQ_TABLE VALUES ('ASSUMEDMATCH', 0);
INSERT INTO SBYN_SEQ_TABLE VALUES ('AUDIT', 0);
INSERT INTO SBYN_SEQ_TABLE VALUES ('MERGE', 0);
INSERT INTO SBYN_SEQ_TABLE VALUES ('SBYN_APPL', 2);
INSERT INTO SBYN_SEQ_TABLE VALUES ('SBYN_COMMON_HEADER', 1);
INSERT INTO SBYN_SEQ_TABLE VALUES ('SBYN_COMMON_DETAIL', 1);
[SBYNTAG:REP-BEGIN]
INSERT INTO SBYN_SEQ_TABLE VALUES ('[sbyntag:nodelist().toUpperCase]', 0);
INSERT INTO SBYN_SEQ_TABLE VALUES ('[sbyntag:nodelist().toUpperCase]SBR', 0);
[SBYNTAG:REP-END]

INSERT INTO SBYN_APPL (APPL_ID, CODE, DESCR, READ_ONLY, CREATE_DATE, CREATE_USERID) 
VALUES (1, 'EV', 'eView5.1', 'Y', sysdate, user);

COMMIT;
