/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2003-2007 Sun Microsystems, Inc. All Rights Reserved.
 *
 * The contents of this file are subject to the terms of the Common 
 * Development and Distribution License ("CDDL")(the "License"). You 
 * may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the License at
 * https://open-dm-mi.dev.java.net/cddl.html
 * or open-dm-mi/bootstrap/legal/license.txt. See the License for the 
 * specific language governing permissions and limitations under the  
 * License.  
 *
 * When distributing the Covered Code, include this CDDL Header Notice 
 * in each file and include the License file at
 * open-dm-mi/bootstrap/legal/license.txt.
 * If applicable, add the following below this CDDL Header, with the 
 * fields enclosed by brackets [] replaced by your own identifying 
 * information: "Portions Copyrighted [year] [name of copyright owner]"
 */
package com.sun.mdm.index.project.ui.applicationeditor.standardization;

import java.util.ArrayList;

import com.sun.mdm.index.project.ui.wizards.generator.ConfigGenerator;
import com.sun.mdm.index.project.ui.wizards.generator.MatchType;

public class StandardizationTypeDialog extends javax.swing.JDialog {
    
    /** Creates new form StandardizationTypeDialog */
    public StandardizationTypeDialog(java.awt.Frame parent, String matchEngine) {
        super(parent, true);
        initComponents();
        loadMatchTypes(matchEngine, null);
    }

    public StandardizationTypeDialog(java.awt.Frame parent, String matchEngine, String standardizationType, String sourceField, ArrayList alFieldIDs) {
        super(parent, true);
        initComponents();
        loadMatchTypes(matchEngine, standardizationType);
        loadProperties(sourceField, alFieldIDs);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDesc = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        lblType = new javax.swing.JLabel();
        cbType = new javax.swing.JComboBox();
        lblName = new javax.swing.JLabel();
        pnlConfiguration = new javax.swing.JPanel();
        lblStep1 = new javax.swing.JLabel();
        lblSources = new javax.swing.JLabel();
        lblStep2 = new javax.swing.JLabel();
        lblFieldIDs = new javax.swing.JLabel();
        btnSelectSource = new javax.swing.JButton();
        btnAddFieldID = new javax.swing.JButton();
        btnRemoveFieldID = new javax.swing.JButton();
        lblStep3 = new javax.swing.JLabel();
        lblTargetMappings = new javax.swing.JLabel();
        btnAddTargetMapping = new javax.swing.JButton();
        btnRemoveTargetMapping = new javax.swing.JButton();
        btnEditTargetMapping = new javax.swing.JButton();
        txtSource = new javax.swing.JTextField();
        scrollPaneFieldIDs = new javax.swing.JScrollPane();
        lstFieldIDs = new javax.swing.JList();
        scrollPaneTargetMappings = new javax.swing.JScrollPane();
        tblTargetMappings = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Standardization Type");
        setModal(true);
        getContentPane().setLayout(null);

        lblDesc.setText("Name, select a type, and configure its details below.");
        getContentPane().add(lblDesc);
        lblDesc.setBounds(10, 10, 330, 14);

        txtName.setEditable(false);
        getContentPane().add(txtName);
        txtName.setBounds(60, 30, 210, 19);

        lblType.setText("Type:");
        getContentPane().add(lblType);
        lblType.setBounds(280, 30, 40, 14);
        getContentPane().add(cbType);
        cbType.setBounds(320, 30, 210, 22);

        lblName.setText("Name:");
        getContentPane().add(lblName);
        lblName.setBounds(20, 30, 40, 14);

        pnlConfiguration.setBorder(javax.swing.BorderFactory.createTitledBorder("Type Configuration"));
        pnlConfiguration.setMinimumSize(new java.awt.Dimension(560, 400));
        pnlConfiguration.setName(""); // NOI18N

        lblStep1.setText("1. Select the source field to be standardized.");

        lblSources.setText("Source:");

        lblStep2.setText("2. Select the field IDs the source will be parsed to.");

        lblFieldIDs.setText("Field IDs:");

        btnSelectSource.setLabel("Select...");

        btnAddFieldID.setLabel("Add...");

        btnRemoveFieldID.setLabel("Remove");
        btnRemoveFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveFieldIDActionPerformed(evt);
            }
        });

        lblStep3.setText("3. Specifying target mappings.");

        lblTargetMappings.setText("Target Mappings:");

        btnAddTargetMapping.setLabel("Add...");

        btnRemoveTargetMapping.setLabel("Remove");

        btnEditTargetMapping.setLabel("Edit...");

        lstFieldIDs.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lstFieldIDs.setPreferredSize(new java.awt.Dimension(400, 400));
        scrollPaneFieldIDs.setViewportView(lstFieldIDs);

        tblTargetMappings.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        tblTargetMappings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        scrollPaneTargetMappings.setViewportView(tblTargetMappings);

        org.jdesktop.layout.GroupLayout pnlConfigurationLayout = new org.jdesktop.layout.GroupLayout(pnlConfiguration);
        pnlConfiguration.setLayout(pnlConfigurationLayout);
        pnlConfigurationLayout.setHorizontalGroup(
            pnlConfigurationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlConfigurationLayout.createSequentialGroup()
                .add(2, 2, 2)
                .add(lblStep1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 260, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(lblStep2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 280, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(pnlConfigurationLayout.createSequentialGroup()
                .add(12, 12, 12)
                .add(lblSources, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 50, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(pnlConfigurationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(txtSource, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnSelectSource, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(20, 20, 20)
                .add(lblFieldIDs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 60, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(scrollPaneFieldIDs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 200, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(pnlConfigurationLayout.createSequentialGroup()
                .add(2, 2, 2)
                .add(lblStep3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 240, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(120, 120, 120)
                .add(btnAddFieldID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(btnRemoveFieldID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(pnlConfigurationLayout.createSequentialGroup()
                .add(12, 12, 12)
                .add(lblTargetMappings, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 110, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(pnlConfigurationLayout.createSequentialGroup()
                .add(12, 12, 12)
                .add(scrollPaneTargetMappings, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 530, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(pnlConfigurationLayout.createSequentialGroup()
                .add(12, 12, 12)
                .add(btnAddTargetMapping, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(btnRemoveTargetMapping, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(btnEditTargetMapping, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        pnlConfigurationLayout.setVerticalGroup(
            pnlConfigurationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(pnlConfigurationLayout.createSequentialGroup()
                .add(pnlConfigurationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblStep1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(lblStep2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(pnlConfigurationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblSources)
                    .add(pnlConfigurationLayout.createSequentialGroup()
                        .add(txtSource, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(6, 6, 6)
                        .add(btnSelectSource))
                    .add(lblFieldIDs)
                    .add(scrollPaneFieldIDs, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 125, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(5, 5, 5)
                .add(pnlConfigurationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(pnlConfigurationLayout.createSequentialGroup()
                        .add(20, 20, 20)
                        .add(lblStep3, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(btnAddFieldID)
                    .add(btnRemoveFieldID))
                .add(lblTargetMappings)
                .add(6, 6, 6)
                .add(scrollPaneTargetMappings, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(pnlConfigurationLayout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnAddTargetMapping)
                    .add(btnRemoveTargetMapping)
                    .add(btnEditTargetMapping)))
        );

        getContentPane().add(pnlConfiguration);
        pnlConfiguration.setBounds(10, 60, 570, 400);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-598)/2, (screenSize.height-500)/2, 598, 500);
    }// </editor-fold>//GEN-END:initComponents

    private void btnRemoveFieldIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveFieldIDActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnRemoveFieldIDActionPerformed
    
    private void loadMatchTypes(String matchEngine, String standardizationType) {
        MatchType[] mMatchTypes;
        mMatchTypes = ConfigGenerator.getMatchTypes(matchEngine);
        for (int i = 0; i < mMatchTypes.length; i++) {
            cbType.addItem(mMatchTypes[i].getMatchTypeID());
        }
        if (standardizationType != null) {
            cbType.setSelectedItem(standardizationType);
        }
    }
    
    private void loadProperties(String sourceField, ArrayList alFieldIDs) {
        txtSource.setText(sourceField);
        lstFieldIDs.setListData(alFieldIDs.toArray());
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new StandardizationTypeDialog(new javax.swing.JFrame(), "SeeBeyond", "Address", "AddressLine1", null).setVisible(true);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFieldID;
    private javax.swing.JButton btnAddTargetMapping;
    private javax.swing.JButton btnEditTargetMapping;
    private javax.swing.JButton btnRemoveFieldID;
    private javax.swing.JButton btnRemoveTargetMapping;
    private javax.swing.JButton btnSelectSource;
    private javax.swing.JComboBox cbType;
    private javax.swing.JLabel lblDesc;
    private javax.swing.JLabel lblFieldIDs;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSources;
    private javax.swing.JLabel lblStep1;
    private javax.swing.JLabel lblStep2;
    private javax.swing.JLabel lblStep3;
    private javax.swing.JLabel lblTargetMappings;
    private javax.swing.JLabel lblType;
    private javax.swing.JList lstFieldIDs;
    private javax.swing.JPanel pnlConfiguration;
    private javax.swing.JScrollPane scrollPaneFieldIDs;
    private javax.swing.JScrollPane scrollPaneTargetMappings;
    private javax.swing.JTable tblTargetMappings;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtSource;
    // End of variables declaration//GEN-END:variables
    
}
