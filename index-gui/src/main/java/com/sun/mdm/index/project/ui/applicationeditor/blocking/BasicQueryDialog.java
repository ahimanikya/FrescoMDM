/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2003-2007 Sun Microsystems, Inc. All Rights Reserved.
 *
 * The contents of this file are subject to the terms of the Common 
 * Development and Distribution License ("CDDL")(the "License"). You 
 * may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the License at
 * https://open-dm-mi.dev.java.net/cddl.html
 * or open-dm-mi/bootstrap/legal/license.txt. See the License for the 
 * specific language governing permissions and limitations under the  
 * License.  
 *
 * When distributing the Covered Code, include this CDDL Header Notice 
 * in each file and include the License file at
 * open-dm-mi/bootstrap/legal/license.txt.
 * If applicable, add the following below this CDDL Header, with the 
 * fields enclosed by brackets [] replaced by your own identifying 
 * information: "Portions Copyrighted [year] [name of copyright owner]"
 */
package com.sun.mdm.index.project.ui.applicationeditor.blocking;

import com.sun.mdm.index.parser.QueryType;
import com.sun.mdm.index.parser.QueryType.QueryBuilder;

public class BasicQueryDialog extends javax.swing.JDialog {
    private String mQueryBuilderName="";
    private String mQueryBuilderClass="";    
    private String mParserClass="";        
    private boolean mModified = false;
    
    /** Creates new form BasicQueryDialog */
    public BasicQueryDialog(QueryBuilder queryBuilder, boolean editMode) {
        super(org.openide.windows.WindowManager.getDefault().getMainWindow(), true);
        initComponents();
        // populate properties
        String optionKey = null;
        boolean useWildcard = false;
        if (queryBuilder != null) {
            optionKey = queryBuilder.getOptionKey(); // useWildcard
            String optionValue = queryBuilder.getOptionValue(); // true
            useWildcard = queryBuilder.getUseWildcard();
        }

        
        if (editMode) {
            mQueryBuilderName = queryBuilder.getQueryBuilderName();
            mQueryBuilderClass = queryBuilder.getQueryBuilderClass();
            mParserClass = queryBuilder.getParserClass();
            jCheckBoxStandardize.setSelected(queryBuilder.getStandardize());    
            jCheckBoxPhoneticize.setSelected(queryBuilder.getPhoneticize());    
            jCheckBoxUseWildcard.setSelected(useWildcard);
        } else {
            mQueryBuilderClass = QueryType.DEFALUT_BASIC_QUERY_BUILDER_CLASS;
            mParserClass = QueryType.DEFALUT_BASIC_QUERY_BUILDER_PARSER_CLASS;
        }
        jTextFieldQueryBuilderName.setEnabled(!editMode);
        jTextFieldQueryBuilderName.setText(mQueryBuilderName);
        jTextFieldQueryBuildClass.setText(mQueryBuilderClass);
        jTextFieldParserClass.setText(mParserClass);
        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jCheckBoxStandardize = new javax.swing.JCheckBox();
        jCheckBoxPhoneticize = new javax.swing.JCheckBox();
        jLabelParserClass = new javax.swing.JLabel();
        jTextFieldParserClass = new javax.swing.JTextField();
        lblQueryBuilderClass = new javax.swing.JLabel();
        jTextFieldQueryBuildClass = new javax.swing.JTextField();
        lblQueryBuilderName = new javax.swing.JLabel();
        jTextFieldQueryBuilderName = new javax.swing.JTextField();
        jCheckBoxUseWildcard = new javax.swing.JCheckBox();
        jCheckBoxUseWildcard.setEnabled(false);
        btnOK = new javax.swing.JButton();
        btnOK.setEnabled(false);
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("com/sun/mdm/index/project/ui/applicationeditor/Bundle"); // NOI18N
        setTitle(bundle.getString("TITLE_Basic_Query_Builder")); // NOI18N

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(null);

        java.util.ResourceBundle bundle1 = java.util.ResourceBundle.getBundle("com/sun/mdm/index/project/ui/applicationeditor/blocking/Bundle"); // NOI18N
        jCheckBoxStandardize.setText(bundle1.getString("LBL_Standardize")); // NOI18N
        jCheckBoxStandardize.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxStandardize.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxStandardize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxStandardizeStateChanged(evt);
            }
        });
        jPanel1.add(jCheckBoxStandardize);
        jCheckBoxStandardize.setBounds(10, 110, 100, 15);

        jCheckBoxPhoneticize.setText(bundle1.getString("LBL_Phoneticize")); // NOI18N
        jCheckBoxPhoneticize.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxPhoneticize.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxPhoneticize.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxPhoneticizeStateChanged(evt);
            }
        });
        jPanel1.add(jCheckBoxPhoneticize);
        jCheckBoxPhoneticize.setBounds(130, 110, 100, 15);

        jLabelParserClass.setText(bundle1.getString("LBL_Parser_Class")); // NOI18N
        jPanel1.add(jLabelParserClass);
        jLabelParserClass.setBounds(10, 70, 120, 20);

        jTextFieldParserClass.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldParserClassKeyReleased(evt);
            }
        });
        jPanel1.add(jTextFieldParserClass);
        jTextFieldParserClass.setBounds(130, 70, 400, 19);

        lblQueryBuilderClass.setText(bundle1.getString("LBL_Query_Builder_Class")); // NOI18N
        jPanel1.add(lblQueryBuilderClass);
        lblQueryBuilderClass.setBounds(10, 40, 120, 20);

        jTextFieldQueryBuildClass.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                onQueryBuilderClassKeyReleased(evt);
            }
        });
        jPanel1.add(jTextFieldQueryBuildClass);
        jTextFieldQueryBuildClass.setBounds(130, 40, 400, 19);

        lblQueryBuilderName.setText(bundle1.getString("LBL_Query_Builder_Name")); // NOI18N
        jPanel1.add(lblQueryBuilderName);
        lblQueryBuilderName.setBounds(10, 10, 120, 20);

        jTextFieldQueryBuilderName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                onQueryBuilderNameKeyReleased(evt);
            }
        });
        jPanel1.add(jTextFieldQueryBuilderName);
        jTextFieldQueryBuilderName.setBounds(130, 10, 400, 20);

        jCheckBoxUseWildcard.setText(bundle1.getString("LBL_Use_Wildcard")); // NOI18N
        jCheckBoxUseWildcard.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        jCheckBoxUseWildcard.setMargin(new java.awt.Insets(0, 0, 0, 0));
        jCheckBoxUseWildcard.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBoxUseWildcardStateChanged(evt);
            }
        });
        jPanel1.add(jCheckBoxUseWildcard);
        jCheckBoxUseWildcard.setBounds(250, 110, 120, 15);

        btnOK.setText(bundle1.getString("LBL_OK")); // NOI18N
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOKActionPerformed(evt);
            }
        });

        btnCancel.setText(bundle1.getString("LBL_Cancel")); // NOI18N
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 540, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(390, 390, 390)
                .add(btnOK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(btnCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 80, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 140, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOK)
                    .add(btnCancel)))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-569)/2, (screenSize.height-221)/2, 569, 221);
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxPhoneticizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxPhoneticizeStateChanged
        enableBtnOK();
    }//GEN-LAST:event_jCheckBoxPhoneticizeStateChanged

    private void jCheckBoxStandardizeStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxStandardizeStateChanged
        enableBtnOK();
    }//GEN-LAST:event_jCheckBoxStandardizeStateChanged

    private void jTextFieldParserClassKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldParserClassKeyReleased
        enableBtnOK();
    }//GEN-LAST:event_jTextFieldParserClassKeyReleased

    private void onQueryBuilderClassKeyReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_onQueryBuilderClassKeyReleased
        enableBtnOK();
    }//GEN-LAST:event_onQueryBuilderClassKeyReleased
                                
    private void jCheckBoxUseWildcardStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBoxUseWildcardStateChanged
        enableBtnOK();
    }//GEN-LAST:event_jCheckBoxUseWildcardStateChanged

    private void onQueryBuilderNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onQueryBuilderNameKeyReleased
        enableBtnOK();
    }//GEN-LAST:event_onQueryBuilderNameKeyReleased

    private void enableBtnOK() {
        String queryBuilderName = jTextFieldQueryBuilderName.getText();
        String queryBuilderClass = jTextFieldQueryBuildClass.getText();  
        String parserClass = jTextFieldParserClass.getText();

        boolean flag = (queryBuilderName == null || queryBuilderName.length() == 0 || 
                        queryBuilderClass == null || queryBuilderClass.length() == 0 || 
                        parserClass == null || parserClass.length() == 0);
        this.btnOK.setEnabled(!flag);        
    }

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        mModified = false;
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnOKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOKActionPerformed
        mModified = true;
        this.dispose();
    }//GEN-LAST:event_btnOKActionPerformed
    
    public boolean isModified() {
        return mModified;
    }
  
    public String getQueryBuilderName() {
        return jTextFieldQueryBuilderName.getText();
    }
    
    public String getQueryBuilderClass() {
        return jTextFieldQueryBuildClass.getText();
    }
    
    public String getParserClass() {
        return jTextFieldParserClass.getText();
    }
    
    public boolean getStandardize() {
        return this.jCheckBoxStandardize.isSelected();
    }
    
    public boolean getPhoneticize() {
        return this.jCheckBoxPhoneticize.isSelected();
    }
    
    public String getOptionKey() {  // ToDo: if other than UseWildcard
        return "UseWildcard";
    }
    
    public String getOptionValue() {    // ToDo: if other than UseWildcard
        return this.jCheckBoxUseWildcard.isSelected() ? "true" : "false";
    }
    
    public boolean getUseWildcard() {
        return this.jCheckBoxUseWildcard.isSelected();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        //new BasicQueryDialog(new javax.swing.JFrame(), true).show();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOK;
    private javax.swing.JCheckBox jCheckBoxPhoneticize;
    private javax.swing.JCheckBox jCheckBoxStandardize;
    private javax.swing.JCheckBox jCheckBoxUseWildcard;
    private javax.swing.JLabel jLabelParserClass;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField jTextFieldParserClass;
    private javax.swing.JTextField jTextFieldQueryBuildClass;
    private javax.swing.JTextField jTextFieldQueryBuilderName;
    private javax.swing.JLabel lblQueryBuilderClass;
    private javax.swing.JLabel lblQueryBuilderName;
    // End of variables declaration//GEN-END:variables
    
}
