/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2003-2007 Sun Microsystems, Inc. All Rights Reserved.
 *
 * The contents of this file are subject to the terms of the Common 
 * Development and Distribution License ("CDDL")(the "License"). You 
 * may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the License at
 * https://open-dm-mi.dev.java.net/cddl.html
 * or open-dm-mi/bootstrap/legal/license.txt. See the License for the 
 * specific language governing permissions and limitations under the  
 * License.  
 *
 * When distributing the Covered Code, include this CDDL Header Notice 
 * in each file and include the License file at
 * open-dm-mi/bootstrap/legal/license.txt.
 * If applicable, add the following below this CDDL Header, with the 
 * fields enclosed by brackets [] replaced by your own identifying 
 * information: "Portions Copyrighted [year] [name of copyright owner]"
 */
package com.sun.mdm.index.project.ui.applicationeditor.standardization;

import java.util.ArrayList;
import com.sun.mdm.index.project.ui.applicationeditor.EntityTree;

public class FieldIDsDialog extends javax.swing.JDialog {
    private ArrayList mAlFieldIDsAvailable;
    private ArrayList mAlFieldIDsSelected = new ArrayList();
    private javax.swing.JList mLstFieldIDsAvailable;
    private javax.swing.JList mLstFieldIDsSelected;
    private boolean mModified = false;

    
    /** Creates new form FieldIDsDialog */
    public FieldIDsDialog(EntityTree entityTree, String standardizationType, ArrayList alFieldIDs) {
        super(org.openide.windows.WindowManager.getDefault().getMainWindow(), true);
        initComponents();
        mLstFieldIDsAvailable = new javax.swing.JList();
        mLstFieldIDsAvailable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClickAvailableTargetIDs(evt);
            }
        });

        mLstFieldIDsSelected = new javax.swing.JList();
        mLstFieldIDsSelected.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                onClickSelectedFieldIDs(evt);
            }
        });
        loadFieldIDsSelected(alFieldIDs);
        // List of "standardized-object-field-id" per standardization type
        // Address, BusinessName, PersonFirstName, etc.
        loadFieldIDsAvailable(entityTree.getEviewApplication().getStandardizationFieldIDsByType(standardizationType));
        scrollPaneFieldIDsAvailable.setViewportView(mLstFieldIDsAvailable);
        scrollPaneFieldIDsSelected.setViewportView(mLstFieldIDsSelected);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblStep2 = new javax.swing.JLabel();
        lblFieldIDsAvailable = new javax.swing.JLabel();
        lblFieldIDsSelected = new javax.swing.JLabel();
        scrollPaneFieldIDsAvailable = new javax.swing.JScrollPane();
        btnAddFieldID = new javax.swing.JButton();
        btnAddFieldID.setEnabled(false);
        btnRemoveFieldID = new javax.swing.JButton();
        btnRemoveFieldID.setEnabled(false);
        scrollPaneFieldIDsSelected = new javax.swing.JScrollPane();
        btnOK = new javax.swing.JButton();
        btnOK.setEnabled(false);
        btnCancel = new javax.swing.JButton();
        btnHelp = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Select Field IDs");
        setModal(true);

        lblStep2.setFont(new java.awt.Font("MS Sans Serif", 1, 11));
        lblStep2.setText("Select standardization field IDs:");

        lblFieldIDsAvailable.setText("Available Field IDs");

        lblFieldIDsSelected.setText("Selected Field IDs");

        btnAddFieldID.setLabel(">");
        btnAddFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onAddFieldIDs(evt);
            }
        });

        btnRemoveFieldID.setLabel("<");
        btnRemoveFieldID.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onRemoveFieldIDs(evt);
            }
        });

        btnOK.setLabel("OK");
        btnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onOK(evt);
            }
        });

        btnCancel.setLabel("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onCancel(evt);
            }
        });

        btnHelp.setActionCommand("Help");
        btnHelp.setLabel("Help");
        btnHelp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onHelp(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(lblStep2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 480, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(20, 20, 20)
                .add(lblFieldIDsAvailable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(140, 140, 140)
                .add(lblFieldIDsSelected, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 120, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(10, 10, 10)
                .add(scrollPaneFieldIDsAvailable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 220, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnRemoveFieldID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(btnAddFieldID, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 40, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(scrollPaneFieldIDsSelected, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 220, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
            .add(layout.createSequentialGroup()
                .add(270, 270, 270)
                .add(btnOK, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(3, 3, 3)
                .add(btnCancel, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(3, 3, 3)
                .add(btnHelp, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 72, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .add(lblStep2, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 20, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(lblFieldIDsAvailable)
                    .add(lblFieldIDsSelected))
                .add(6, 6, 6)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(scrollPaneFieldIDsAvailable, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 280, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(layout.createSequentialGroup()
                        .add(90, 90, 90)
                        .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                            .add(layout.createSequentialGroup()
                                .add(20, 20, 20)
                                .add(btnRemoveFieldID))
                            .add(btnAddFieldID)))
                    .add(scrollPaneFieldIDsSelected, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 280, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(10, 10, 10)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(btnOK)
                    .add(btnCancel)
                    .add(btnHelp)))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-508)/2, (screenSize.height-400)/2, 508, 400);
    }// </editor-fold>//GEN-END:initComponents

    private void onHelp(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onHelp
        // TODO add your handling code here:
    }//GEN-LAST:event_onHelp

    private void onOK(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onOK
        mModified = true;
        this.dispose();
    }//GEN-LAST:event_onOK

    private void onCancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onCancel
        mModified = false;
        this.dispose();
    }//GEN-LAST:event_onCancel

    private void onClickSelectedFieldIDs(java.awt.event.MouseEvent evt) {
        btnRemoveFieldID.setEnabled(true);

    }

    private void onRemoveFieldIDs(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onRemoveFieldIDs
        int[] rs = mLstFieldIDsSelected.getSelectedIndices();
        int[] indices = new int[rs.length];
        int j = -1;
        for (int i=rs.length - 1; i>=0 && i < rs.length; i--) {
            mAlFieldIDsAvailable.add(mAlFieldIDsSelected.get(rs[i]));
            int index = mAlFieldIDsAvailable.indexOf(mAlFieldIDsSelected.get(rs[i]));
            indices[++j] = index;
            mAlFieldIDsSelected.remove(rs[i]);
        }
        mLstFieldIDsSelected.setListData(mAlFieldIDsSelected.toArray());
        mLstFieldIDsAvailable.setListData(mAlFieldIDsAvailable.toArray());
        if (j >= 0) {
            mLstFieldIDsAvailable.setSelectedIndices(indices);
            //mLstFieldIDsAvailable.setAutoscrolls(true);
            btnAddFieldID.setEnabled(true);
        }
        btnRemoveFieldID.setEnabled(false);
        btnOK.setEnabled(true);
    }//GEN-LAST:event_onRemoveFieldIDs

    private void onAddFieldIDs(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onAddFieldIDs
        if (mLstFieldIDsAvailable != null && mLstFieldIDsAvailable.getModel().getSize() > 0) {
            Object[] fieldNames = mLstFieldIDsAvailable.getSelectedValues();
            int[] indices = new int[fieldNames.length];
            int j = -1;
            for (int i=fieldNames.length - 1; i>=0 && i < fieldNames.length; i--) {
                if (mAlFieldIDsSelected != null && !mAlFieldIDsSelected.contains(fieldNames[i])) {
                    mAlFieldIDsSelected.add(fieldNames[i]);
                    int index = mAlFieldIDsSelected.indexOf(fieldNames[i]);
                    indices[++j] = index;
                    mAlFieldIDsAvailable.remove(fieldNames[i]);
                }
            }
            if (mLstFieldIDsSelected != null) {
                mLstFieldIDsSelected.setListData(mAlFieldIDsSelected.toArray());
                if (j >= 0) {
                    mLstFieldIDsSelected.setSelectedIndices(indices);
                    //mLstFieldIDsSelected.setAutoscrolls(true);
                    btnRemoveFieldID.setEnabled(true);
                }
                btnAddFieldID.setEnabled(false);
            }
            mLstFieldIDsAvailable.setListData(mAlFieldIDsAvailable.toArray());
        }
        btnOK.setEnabled(true);
    }//GEN-LAST:event_onAddFieldIDs

    private void onClickAvailableTargetIDs(java.awt.event.MouseEvent evt) {
        btnAddFieldID.setEnabled(true);
    }
    
    private void loadFieldIDsAvailable(ArrayList alFieldIDsAvailable) {
        mAlFieldIDsAvailable = alFieldIDsAvailable;
        if (mAlFieldIDsAvailable != null && mAlFieldIDsSelected != null) {
            for (int i=0; i < mAlFieldIDsSelected.size(); i++) {
                String fieldIdSelected = (String) mAlFieldIDsSelected.get(i);
                if (mAlFieldIDsAvailable.contains(fieldIdSelected)) {
                    mAlFieldIDsAvailable.remove(fieldIdSelected);
                }
            }
        }
        mLstFieldIDsAvailable.setListData(alFieldIDsAvailable.toArray());
    }

    private void loadFieldIDsSelected(ArrayList alFieldIDs) {
		mAlFieldIDsSelected = alFieldIDs;
        mLstFieldIDsSelected.setListData(alFieldIDs.toArray());
    }
    
    public ArrayList getSelectedFieldIDs() {
        return this.mAlFieldIDsSelected;
    }
    
    public boolean isModified() {
        return mModified;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddFieldID;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnHelp;
    private javax.swing.JButton btnOK;
    private javax.swing.JButton btnRemoveFieldID;
    private javax.swing.JLabel lblFieldIDsAvailable;
    private javax.swing.JLabel lblFieldIDsSelected;
    private javax.swing.JLabel lblStep2;
    private javax.swing.JScrollPane scrollPaneFieldIDsAvailable;
    private javax.swing.JScrollPane scrollPaneFieldIDsSelected;
    // End of variables declaration//GEN-END:variables
    
}
