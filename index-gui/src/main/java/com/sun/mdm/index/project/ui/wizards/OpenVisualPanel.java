/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2003-2007 Sun Microsystems, Inc. All Rights Reserved.
 *
 * The contents of this file are subject to the terms of the Common 
 * Development and Distribution License ("CDDL")(the "License"). You 
 * may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the License at
 * https://open-dm-mi.dev.java.net/cddl.html
 * or open-dm-mi/bootstrap/legal/license.txt. See the License for the 
 * specific language governing permissions and limitations under the  
 * License.  
 *
 * When distributing the Covered Code, include this CDDL Header Notice 
 * in each file and include the License file at
 * open-dm-mi/bootstrap/legal/license.txt.
 * If applicable, add the following below this CDDL Header, with the 
 * fields enclosed by brackets [] replaced by your own identifying 
 * information: "Portions Copyrighted [year] [name of copyright owner]"
 */
package com.sun.mdm.index.project.ui.wizards;

import org.openide.util.NbBundle;
import java.awt.Toolkit;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.swing.filechooser.FileFilter;


/** A single panel for a wizard - the GUI portion.
 *
 */
public class OpenVisualPanel extends javax.swing.JPanel {

    /** The wizard panel descriptor associated with this GUI panel.
     * If you need to fire state changes or something similar, you can
     * use this handle to do so.
     */
    private final OpenPanel panel;
    private boolean bSelectFile = false;

    // Variables declaration - do not modify//variables
    private javax.swing.JLabel jLabelApplicationName;
    private javax.swing.JTextField mNewView;


    /** Create the wizard panel and set up some basic properties.
     *
     *@param panel OpenPanel
     *
     */
    public OpenVisualPanel(OpenPanel panel) {
        this.panel = panel;
        initComponents();

        // Provide a name in the title bar.
        setName(NbBundle.getMessage(OpenVisualPanel.class,
                "TITLE_DefineViewPanel"));

        //
        //        
        //mTargetRepository.insertItemAt("localhost", 0);
        //mTargetRepository.setSelectedIndex(0);

        /*
        // Optional: provide a special description for this pane.
        // You must have turned on WizardDescriptor.WizardPanel_helpDisplayed
        // (see descriptor in standard iterator template for an example of this).
        try {
            putClientProperty("WizardPanel_helpURL", // NOI18N
                new URL("nbresloc:/eview/wizard/src/java/com/sun/mdm/index/project/ui/wizards/OpenVisualHelp.html")); // NOI18N
        } catch (MalformedURLException mfue) {
            throw new IllegalStateException(mfue.toString());
        }
         */
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {
        jLabelApplicationName = new javax.swing.JLabel();

        setLayout(null);

        jLabelApplicationName.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabelApplicationName.setText(NbBundle.getMessage(OpenVisualPanel.class,
                "MSG_static_View"));

        mNewView = new javax.swing.JTextField();
        mNewView.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(KeyEvent evt) {
                    panel.fireChangeEvent();
                }
                public void keyTyped(KeyEvent evt) {
                    char c = evt.getKeyChar();

                    if (!Character.isLetterOrDigit(c) && c != '-' && c != '_' 
                        && c!= KeyEvent.VK_BACK_SPACE  && c!= KeyEvent.VK_DELETE) {
                        Toolkit.getDefaultToolkit().beep();
                        evt.consume();
                    }
                }
            });
            
        jLabelApplicationName.setBounds(0, 130, 70, 28);
        mNewView.setBounds(75, 130, 270, 28);
        add(jLabelApplicationName);
        add(mNewView, new java.awt.GridBagConstraints());

    }

    // End of variables declaration//variables

    /** for OpenPanel to set ViewName entered from the project configuration panel
     *@param ViewName
     */
    public void setViewName(String name) {
        mNewView.setText(name);
    }
    
    /** for OpenPanel to save ViewName for the next panels
     *@return ViewName
     */
    public String getViewName() {
        return mNewView.getText();
    }

    class XmlFileFilter extends FileFilter {
        /**
         * Creates a new instance of XmlFileFilter
         */
        public XmlFileFilter() {
        }

        /**
         * The description of this filter.
         *
         * @return the schema description
         */
        public String getDescription() {
            return "Xml File Types";
        }

        /**
         * Whether the given file is accepted by this filter.
         *
         * @param f the file to be tested
         * @return ture if the file is accepted
         */
        public boolean accept(File f) {
            if (f.isDirectory()) {
                return true;
            }

            String ext = null;
            String s = f.getName();
            int i = s.lastIndexOf('.');

            if ((i > 0) && (i < (s.length() - 1))) {
                ext = s.substring(i + 1).toLowerCase();
            }

            if (ext != null) {
                return (ext.equals("xml"));
            }

            return false;
        }
    }
}
