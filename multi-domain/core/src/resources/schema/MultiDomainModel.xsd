<?xml version="1.0" encoding="UTF-8"?>
<!--
 # DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 #
 # Copyright 2003-2007 Sun Microsystems, Inc. All Rights Reserved.
 #
 # The contents of this file are subject to the terms of the Common 
 # Development and Distribution License ("CDDL")(the "License"). You 
 # may not use this file except in compliance with the License.
 #
 # You can obtain a copy of the License at
 # https://open-dm-mi.dev.java.net/cddl.html
 # or open-dm-mi/bootstrap/legal/license.txt. See the License for the 
 # specific language governing permissions and limitations under the  
 # License.  
 #
 # When distributing the Covered Code, include this CDDL Header Notice 
 # in each file and include the License file at
 # open-dm-mi/bootstrap/legal/license.txt.
 # If applicable, add the following below this CDDL Header, with the 
 # fields enclosed by brackets [] replaced by your own identifying 
 # information: "Portions Copyrighted [year] [name of copyright owner]"
-->

<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified">
    <xs:element name="Configuration">
        <xs:complexType>
            <xs:all>
                <xs:element name="database" type="xs:string"/>
                <xs:element name="dateformat" type="xs:string"/>
                <xs:element name="domains" minOccurs="0" maxOccurs="1"/>
                <xs:element name="relationship" type="definition" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="hierarchy" type="definition" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="group" type="definition" minOccurs="0" maxOccurs="unbounded"/>
                <xs:element ref="category" type="definition" minOccurs="0" maxOccurs="unbounded"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
    
    <!--xs:element name="domains">
        <xs:complexType>
            <xs:element name="domain" maxOccurs="unbounded"/>
        </xs:complexType>
    </xs:element-->
    <xs:element name="domain">
        <xs:complexType>
            <xs:attribute name="name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN"/>
                </xs:simpleType>
            </xs:attribute>
        </xs:complexType>
    </xs:element>
    
    <xs:element name="definition">
        <xs:complexType>
            <xs:attribute name="name" use="required">
                <xs:simpleType>
                    <xs:restriction base="xs:NMTOKEN"/>
                </xs:simpleType>
            </xs:attribute>
            <xs:all>
                <xs:element name="domain" type="xs:string" minOccurs="0" maxOccurs="1"/>
                <xs:element name="source-domain" type="xs:string"/>
                <xs:element name="target-domain" type="xs:string"/>
                <xs:element name="direction" type="xs:string"/>
                <xs:element name="plugin" type="xs:string"/>
                <xs:element name="description" type="xs:string"/>
                <xs:element name="predefined-attributes" type="PreAttributes"/>
                <xs:element name="extended-attributes" type="ExAttributes"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <xs:element name="PreAttributes">
        <xs:complexType>
            <xs:element name="attribute" type="PreAttribute" maxOccurs="unbounded"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="PreAttribute">
        <xs:complexType>
            <xs:all>
                <xs:element name="name" type="xs:string"/>
                <xs:element name="data-type" type="xs:string"/>
                <xs:element name="included" type="xs:boolean"/>
                <xs:element name="required" type="xs:boolean"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
    <xs:element name="ExAttributes">
        <xs:complexType>
            <xs:element name="attribute" type="ExAttribute" maxOccurs="unbounded"/>
        </xs:complexType>
    </xs:element>
    <xs:element name="ExAttribute">
        <xs:complexType>
            <xs:all>
                <xs:element name="name" type="xs:string"/>
                <xs:element name="column-name" type="xs:string"/>
                <xs:element name="data-type" type="xs:string"/>
                <xs:element name="default-value" type="xs:string"/>
                <xs:element name="searchable" type="xs:boolean"/>
                <xs:element name="required" type="xs:boolean"/>
            </xs:all>
        </xs:complexType>
    </xs:element>
</xs:schema>
