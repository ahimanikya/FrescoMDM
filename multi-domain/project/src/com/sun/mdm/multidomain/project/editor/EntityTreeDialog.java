/*
 * EntityTreeDialog.java
 *
 * Created on November 4, 2008, 10:44 AM
 */

package com.sun.mdm.multidomain.project.editor;

import com.sun.mdm.multidomain.parser.FieldGroup;
import java.util.ArrayList;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;
import org.openide.DialogDisplayer;
import org.openide.NotifyDescriptor;
import org.openide.util.NbBundle;

/**
 *
 * @author  wee
 */
public class EntityTreeDialog extends javax.swing.JDialog {

    private EntityTree mEntityTree = null;
    
    private boolean mWildcard = true;
    
    private boolean mSelected = false;
    
    private ArrayList<String> fieldList = new ArrayList<String>();
    
    private FieldGroup mFieldGroup = null;
            
    /** Creates new form EntityTreeDialog */
    public EntityTreeDialog( EntityTree entityTree, FieldGroup fieldGroup) {
        super(org.openide.windows.WindowManager.getDefault().getMainWindow(), true);
        mEntityTree = entityTree;
        mEntityTree.setEditable(false);
        mFieldGroup = fieldGroup;
        initComponents();
        jSPEntityTree.setViewportView(mEntityTree);
        this.jTextFieldDomain.setText(mEntityTree.getRootNode().getName());
        mEntityTree.addMouseListener(new java.awt.event.MouseAdapter() {
                @Override
                public void mouseClicked(java.awt.event.MouseEvent evt) {
                    fieldList.clear();
                    if (evt.getClickCount() == 1) {
                        TreePath hitPath = mEntityTree.getPathForLocation(
                                evt.getX(),
                                evt.getY());
                        if (hitPath != null) {
                            EntityNode selectedNode = (EntityNode) hitPath.getLastPathComponent();
                            if (selectedNode != null) {
                                String ePath = setTargetFieldName(selectedNode);
                                if (mFieldGroup.isFieldAdded(ePath)) {
                                    String warningMsg = NbBundle.getMessage(TabDomainSearch.class, "MSG_ERROR_DELETING_SEARCH_DETAIL");
                                    NotifyDescriptor errorNotify = new NotifyDescriptor.Message(
                                            warningMsg,
                                            NotifyDescriptor.ERROR_MESSAGE);
                                    DialogDisplayer.getDefault().notify(errorNotify);
                                } else {
                                    fieldList.add(ePath);
                                    mSelected = true;
                                }
                            //onBtnOK(null);
                            }
                        }
                    }
                }
            });        
    }

    public boolean isSelected() {
        return this.mSelected;
    }
    
    private String setTargetFieldName(EntityNode selectedNode) {
        if (selectedNode.isField()) {
            TreeNode[] nodes = selectedNode.getPath();
            String fieldNamePath = "";
            for (int i=0; i < nodes.length; i++) {
                EntityNode node = (EntityNode) nodes[i];
                String nodeName = node.getName();
                if (node.isRoot()) {
                } else if (node.isPrimary()) {
                    fieldNamePath = nodeName;
                } else if (node.isSub()) {
                    fieldNamePath += "." + nodeName;
                    if (mWildcard) {
                        fieldNamePath += "[*]";
                    }
                } else { // isField
                    fieldNamePath += "." + nodeName;
                }
            }
            
            
            //txtTargetFieldName.setText(fieldNamePath);
            jBtnOK.setEnabled(true);
            return fieldNamePath;
        } else {
            //txtTargetFieldName.setText("");
            jBtnOK.setEnabled(false);
            return "";
        }
        
    }
    
    public ArrayList<String> getFieldList() {
        return this.fieldList;        
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jSPEntityTree = new javax.swing.JScrollPane();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldDomain = new javax.swing.JTextField();
        jBtnOK = new javax.swing.JButton();
        jBtnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(org.openide.util.NbBundle.getMessage(EntityTreeDialog.class, "LBL_DOMAIN_ENTITY")); // NOI18N

        jLabel1.setText(org.openide.util.NbBundle.getMessage(EntityTreeDialog.class, "LBL_Domain")); // NOI18N

        jTextFieldDomain.setEditable(false);

        org.jdesktop.layout.GroupLayout jPanel1Layout = new org.jdesktop.layout.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jPanel1Layout.createSequentialGroup()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 54, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextFieldDomain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 147, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(jSPEntityTree, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 350, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1Layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabel1)
                    .add(jTextFieldDomain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jSPEntityTree, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 311, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBtnOK.setText(org.openide.util.NbBundle.getMessage(EntityTreeDialog.class, "LBL_OK")); // NOI18N
        jBtnOK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBtnOK(evt);
            }
        });

        jBtnCancel.setText(org.openide.util.NbBundle.getMessage(EntityTreeDialog.class, "LBL_Cancel")); // NOI18N
        jBtnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                onBtnCancel(evt);
            }
        });

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap(232, Short.MAX_VALUE)
                .add(jBtnOK)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jBtnCancel)
                .add(32, 32, 32))
        );

        layout.linkSize(new java.awt.Component[] {jBtnCancel, jBtnOK}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(jPanel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jBtnOK)
                    .add(jBtnCancel))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-408)/2, (screenSize.height-449)/2, 408, 449);
    }// </editor-fold>//GEN-END:initComponents

private void onBtnOK(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onBtnOK
// TODO add your handling code here:
    //if (jSPEntityTree.Se
    //mEntityTree.getSelectionPaths()
    this.dispose();
}//GEN-LAST:event_onBtnOK

private void onBtnCancel(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_onBtnCancel
// TODO add your handling code here:
    this.dispose();
}//GEN-LAST:event_onBtnCancel


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnCancel;
    private javax.swing.JButton jBtnOK;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jSPEntityTree;
    private javax.swing.JTextField jTextFieldDomain;
    // End of variables declaration//GEN-END:variables

}
