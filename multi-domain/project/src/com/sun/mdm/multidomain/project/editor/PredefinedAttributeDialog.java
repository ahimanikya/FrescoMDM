/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2003-2007 Sun Microsystems, Inc. All Rights Reserved.
 *
 * The contents of this file are subject to the terms of the Common 
 * Development and Distribution License ("CDDL")(the "License"). You 
 * may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the License at
 * https://open-dm-mi.dev.java.net/cddl.html
 * or open-dm-mi/bootstrap/legal/license.txt. See the License for the 
 * specific language governing permissions and limitations under the  
 * License.  
 *
 * When distributing the Covered Code, include this CDDL Header Notice 
 * in each file and include the License file at
 * open-dm-mi/bootstrap/legal/license.txt.
 * If applicable, add the following below this CDDL Header, with the 
 * fields enclosed by brackets [] replaced by your own identifying 
 * information: "Portions Copyrighted [year] [name of copyright owner]"
 */

package com.sun.mdm.multidomain.project.editor;

/**
 *
 * @author  kkao
 */
public class PredefinedAttributeDialog extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    boolean bModified = false;

    /** Creates new form PredefinedAttributeDialog */
    public PredefinedAttributeDialog(String name, String included, String required) {
        super(org.openide.windows.WindowManager.getDefault().getMainWindow(), true);
        initComponents();
        this.jTextAttributeName.setText(name);
        jCheckBoxIncluded.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                if (!jCheckBoxIncluded.isSelected()) {
                    jCheckBoxRequired.setSelected(false);
                }
                jCheckBoxRequired.setEnabled(jCheckBoxIncluded.isSelected());
            }
        });
        this.jCheckBoxIncluded.setSelected(included.equals("true"));
        this.jCheckBoxRequired.setSelected(required.equals("true"));
        enableBtnOK();
    }
    
    public String getAttributeName() {
        return jTextAttributeName.getText();
    }
        
    public boolean getIncluded() {
        return jCheckBoxIncluded.isSelected();
    }

    public boolean getRequired() {
        return jCheckBoxRequired.isSelected();
    }
    
    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabelName = new javax.swing.JLabel();
        jTextAttributeName = new javax.swing.JTextField();
        jCheckBoxIncluded = new javax.swing.JCheckBox();
        jCheckBoxRequired = new javax.swing.JCheckBox();

        setTitle(org.openide.util.NbBundle.getMessage(PredefinedAttributeDialog.class, "TITLE_Predefined_Attribute")); // NOI18N

        okButton.setText(org.openide.util.NbBundle.getMessage(PredefinedAttributeDialog.class, "LBL_OK")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(org.openide.util.NbBundle.getMessage(PredefinedAttributeDialog.class, "LBL_Cancel")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabelName.setText(org.openide.util.NbBundle.getMessage(PredefinedAttributeDialog.class, "LBL_Name")); // NOI18N

        jTextAttributeName.setEnabled(false);
        jTextAttributeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                onNameKeyReleased(evt);
            }
        });

        jCheckBoxIncluded.setText(org.openide.util.NbBundle.getMessage(PredefinedAttributeDialog.class, "LBL_Included")); // NOI18N

        jCheckBoxRequired.setText(org.openide.util.NbBundle.getMessage(PredefinedAttributeDialog.class, "LBL_Required")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jCheckBoxRequired, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, layout.createSequentialGroup()
                        .add(jLabelName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 77, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jTextAttributeName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 183, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.LEADING, jCheckBoxIncluded, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jTextAttributeName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jLabelName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.UNRELATED)
                .add(jCheckBoxIncluded)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jCheckBoxRequired)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 5, Short.MAX_VALUE)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(okButton)
                    .add(cancelButton))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-292)/2, (screenSize.height-158)/2, 292, 158);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        bModified = true;
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        bModified = false;
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

private void onNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onNameKeyReleased
    enableBtnOK();
}//GEN-LAST:event_onNameKeyReleased

    /** Closes the dialog */
    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    
    public boolean isModified() {
        return bModified;
    }
    
    private void enableBtnOK() {
        boolean flag = true;
        this.okButton.setEnabled(flag);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JCheckBox jCheckBoxIncluded;
    private javax.swing.JCheckBox jCheckBoxRequired;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JTextField jTextAttributeName;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
