/*
 * DO NOT ALTER OR REMOVE COPYRIGHT NOTICES OR THIS HEADER.
 *
 * Copyright 2003-2007 Sun Microsystems, Inc. All Rights Reserved.
 *
 * The contents of this file are subject to the terms of the Common 
 * Development and Distribution License ("CDDL")(the "License"). You 
 * may not use this file except in compliance with the License.
 *
 * You can obtain a copy of the License at
 * https://open-dm-mi.dev.java.net/cddl.html
 * or open-dm-mi/bootstrap/legal/license.txt. See the License for the 
 * specific language governing permissions and limitations under the  
 * License.  
 *
 * When distributing the Covered Code, include this CDDL Header Notice 
 * in each file and include the License file at
 * open-dm-mi/bootstrap/legal/license.txt.
 * If applicable, add the following below this CDDL Header, with the 
 * fields enclosed by brackets [] replaced by your own identifying 
 * information: "Portions Copyrighted [year] [name of copyright owner]"
 */

package com.sun.mdm.multidomain.project.editor;

import java.util.ArrayList;

import com.sun.mdm.multidomain.parser.Definition;

/**
 *
 * @author  kkao
 */
public class AddRelationshipDialog extends javax.swing.JDialog {
    /** A return status code - returned if Cancel button has been pressed */
    public static final int RET_CANCEL = 0;
    /** A return status code - returned if OK button has been pressed */
    public static final int RET_OK = 1;
    private EditorMainApp mEditorMainApp;
    
    /** Creates new form AddDefinitionDialog */
    public AddRelationshipDialog(ArrayList <String> alDomains, EditorMainApp editorMainApp) {
        super();
        initComponents();
        mEditorMainApp = editorMainApp;
        setTitle(org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "TITLE_Add_Relationship")); // NOI18N
        setDomains(alDomains);
        enableBtnOK();
    }

    public void setDomains(ArrayList <String> alDomains) {
        if (alDomains != null && alDomains.size() > 0) {
            for (int i=0; alDomains != null && i < alDomains.size(); i++) {
                jComboBoxSourceDomains.insertItemAt(alDomains.get(i), i);
                jComboBoxTargetDomains.insertItemAt(alDomains.get(i), i);
            }
            jComboBoxSourceDomains.setSelectedIndex(0);
            if (alDomains.size() > 1) {
                jComboBoxTargetDomains.setSelectedIndex(1);
            } else {
                jComboBoxTargetDomains.setSelectedIndex(0);
            }
        }
    }
    
    public void setPlugins(ArrayList <String> alPlugins) {
        if (alPlugins != null && alPlugins.size() > 0) {
            for (int i=0; alPlugins != null && i < alPlugins.size(); i++) {
                jComboBoxPlugins.insertItemAt(alPlugins.get(i), i);
            }
            jComboBoxPlugins.setSelectedIndex(0);
        }
    }
    
    public String getDefinitionName() {
        return jTextFieldName.getText();
    }
    
    public String getSourceDomain() {
        return (String) jComboBoxSourceDomains.getSelectedItem();
    }
    
    public String getTargetDomain() {
        return (String) jComboBoxTargetDomains.getSelectedItem();
    }
    
    public String getPlugin() {
        return (String) jComboBoxPlugins.getSelectedItem();
    }

    /** @return the return status of this dialog - one of RET_OK or RET_CANCEL */
    public int getReturnStatus() {
        return returnStatus;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        okButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabelName = new javax.swing.JLabel();
        jTextFieldName = new javax.swing.JTextField();
        jLabelSourceDomain = new javax.swing.JLabel();
        jComboBoxSourceDomains = new javax.swing.JComboBox();
        jLabelTargetDomain = new javax.swing.JLabel();
        jComboBoxTargetDomains = new javax.swing.JComboBox();
        jLabelPlugin = new javax.swing.JLabel();
        jComboBoxPlugins = new javax.swing.JComboBox();

        setTitle(org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "TITLE_Add_Definition")); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                closeDialog(evt);
            }
        });

        okButton.setText(org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "LBL_OK")); // NOI18N
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        cancelButton.setText(org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "LBL_Cancel")); // NOI18N
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        jLabelName.setText(org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "LBL_Name")); // NOI18N

        jTextFieldName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                onNameKeyReleased(evt);
            }
        });

        jLabelSourceDomain.setText(org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "LBL_Source_Domain_Colon")); // NOI18N

        jComboBoxSourceDomains.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                onSourceDomainSelected(evt);
            }
        });

        jLabelTargetDomain.setText(org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "LBL_Target_Domain_Colon")); // NOI18N

        jComboBoxTargetDomains.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                onTargetDomainSelected(evt);
            }
        });

        jLabelPlugin.setText(org.openide.util.NbBundle.getMessage(AddRelationshipDialog.class, "LBL_Plugin")); // NOI18N

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jLabelName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(4, 4, 4)
                        .add(jTextFieldName, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabelSourceDomain, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .add(4, 4, 4)
                        .add(jComboBoxSourceDomains, 0, 177, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabelTargetDomain, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .add(4, 4, 4)
                        .add(jComboBoxTargetDomains, 0, 177, Short.MAX_VALUE))
                    .add(layout.createSequentialGroup()
                        .add(jLabelPlugin, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(jComboBoxPlugins, 0, 177, Short.MAX_VALUE))
                    .add(org.jdesktop.layout.GroupLayout.TRAILING, layout.createSequentialGroup()
                        .add(okButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 83, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                        .add(cancelButton, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 87, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jLabelName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 19, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jTextFieldName, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jLabelSourceDomain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 21, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(jComboBoxSourceDomains, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(layout.createSequentialGroup()
                        .add(jComboBoxTargetDomains, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(1, 1, 1))
                    .add(jLabelTargetDomain, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 23, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(jComboBoxPlugins)
                    .add(jLabelPlugin, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 18, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .add(18, 18, 18)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(okButton)
                    .add(cancelButton))
                .addContainerGap())
        );

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-295)/2, (screenSize.height-203)/2, 295, 203);
    }// </editor-fold>//GEN-END:initComponents

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed
        doClose(RET_OK);
    }//GEN-LAST:event_okButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        doClose(RET_CANCEL);
    }//GEN-LAST:event_cancelButtonActionPerformed

    /** Closes the dialog */
    private void closeDialog(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_closeDialog
        doClose(RET_CANCEL);
    }//GEN-LAST:event_closeDialog

private void onNameKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_onNameKeyReleased
    enableBtnOK();
}//GEN-LAST:event_onNameKeyReleased

private void onSourceDomainSelected(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_onSourceDomainSelected
    // load plugin list per domain
    setPlugins(mEditorMainApp.getPluginList(getSourceDomain(), Definition.TYPE_RELATIONSHIP));
    enableBtnOK();

}//GEN-LAST:event_onSourceDomainSelected

private void onTargetDomainSelected(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_onTargetDomainSelected
    enableBtnOK();

}//GEN-LAST:event_onTargetDomainSelected

    private void doClose(int retStatus) {
        returnStatus = retStatus;
        setVisible(false);
        dispose();
    }
    
    private void enableBtnOK() {
        boolean flagDomains = false;
        String sourceDomain = getSourceDomain();
        String targetDomain = getTargetDomain();
        if ((sourceDomain != null && targetDomain != null) &&
            (!sourceDomain.equals(targetDomain)) ) {
            flagDomains = true;            
        }
        boolean flag = flagDomains & (this.jTextFieldName.getText().length() > 0);
        this.okButton.setEnabled(flag);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    private javax.swing.JComboBox jComboBoxPlugins;
    private javax.swing.JComboBox jComboBoxSourceDomains;
    private javax.swing.JComboBox jComboBoxTargetDomains;
    private javax.swing.JLabel jLabelName;
    private javax.swing.JLabel jLabelPlugin;
    private javax.swing.JLabel jLabelSourceDomain;
    private javax.swing.JLabel jLabelTargetDomain;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables

    private int returnStatus = RET_CANCEL;
}
