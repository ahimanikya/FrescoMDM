<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd">
    
    <!--bean id="propertyConfigurer"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer"
          p:location="/WEB-INF/jdbc.properties" />
    
    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="${jdbc.driverClassName}"
          p:url="${jdbc.url}"
          p:username="${jdbc.username}"
          p:password="${jdbc.password}" /-->
    
    <!-- ADD PERSISTENCE SUPPORT HERE (jpa, hibernate, etc) -->  
    
    <!--
      - Locale resolver inspects the accept-language header in the request that was sent by the browser of the client.
      -->
    <bean id="localeResolver" class="org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver">
    </bean>
    <!--
      - Message source for this context, loaded from localized "messages_xx" files.
      -->
    <bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
        <property name="basename" value="messages"/>
    </bean>
    <!--
      - This bean resolves specific types of exception to corresponding error views.
      - The default behaviour of DispatcherServlet is to propagate all exceptions to the
      - servlet container: This will happen here with all other types of exception.
       -->
    <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
        <props>
            <prop key="com.sun.mdm.multidomain.services.core.ServiceException">serviceaccessfailure</prop>
	</props>
	</property>
	</bean>       
    <!-- 
      - DWR beans handlers.
      -->
    <bean id="DomainHandler" class="com.sun.mdm.multidomain.presentation.beans.DomainHandler">
    </bean>
    
    <bean id="RelationshipTypeHandler" class="com.sun.mdm.multidomain.presentation.beans.RelationshipTypeHandler">
    </bean>
    
    <bean id="RelationshipHandler" class="com.sun.mdm.multidomain.presentation.beans.RelationshipHandler">
    </bean>
    
    <bean id="HierarchyTypeHandler" class="com.sun.mdm.multidomain.presentation.beans.HierarchyTypeHandler">
    </bean>
    
    <bean id="HierarchyHandler" class="com.sun.mdm.multidomain.presentation.beans.HierarchyHandler">
    </bean>
    
</beans>
