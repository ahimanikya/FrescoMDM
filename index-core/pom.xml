<?xml version="1.0"?>
<project>
    <parent>
        <artifactId>open-dm-mi</artifactId>
        <groupId>mural</groupId>
        <version>1.0</version>
        <relativePath>../pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <groupId>mural</groupId>
    <artifactId>index-core</artifactId>
    <name>Master Index Core</name>
    <version>${mural.currentVersion}</version>
    <url>http://maven.apache.org</url>
    <build>
        <testSourceDirectory>src/test/java</testSourceDirectory>
        <testOutputDirectory>target/test-classes</testOutputDirectory>
        <finalName>index-core</finalName>
        <resources>
            <resource>
                <directory>src/main/java</directory>
                <excludes>
                    <exclude>**/*.java</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>com/**</include>
                </includes>
            </resource>            
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <classesDirectory>${project.build.directory}/classes</classesDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>extract-globalized-messages</id>
                        <phase>process-classes</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                            <taskdef name="i18n" classname="net.java.hulp.i18n.buildtools.I18NTask" classpath="${basedir}/src/main/resources/globalization/net.java.hulp.i18ntask.jar"/>
                            <i18n dir="${project.build.directory}/classes" file="${basedir}/src/main/resources/com/sun/mdm/index/util/msgs.properties" prefix="MDM-MI-" strict="false" pattern="([A-Z][A-Z][A-Z]\d\d\d)(: )(.*)" />               
                            </tasks> 
                        </configuration>
                    </execution>
                    <execution>
                        <id>make-ejb-source-zip</id>
                        <phase>process-classes</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                                <move todir="${project.build.testOutputDirectory}">
                                    <fileset dir="${project.build.directory}/classes" >
                                        <include name="com/sun/mdm/index/ejb/**/*EJB.class"/>
                                    </fileset>
                                </move>   
                                <zip destfile="${project.build.directory}/ejb-source.zip">
                                    <fileset dir="${basedir}/src/main/java">
                                        <include name="com/sun/mdm/index/ejb/**/*EJB.java"/>
                                    </fileset>
                                </zip>
                            </tasks> 
                        </configuration>
                    </execution>
                    <execution>
                        <id>JUnit-generate-eindex</id>
                        <phase>generate-test-sources</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                                <!--Generating EIndex Project-->
                                <echo>::Compiling EViewGeneratorTask for Generating EIndex Project</echo>
                                <mkdir dir="${project.build.testOutputDirectory}"/>
                                <property name="build.compiler" value="extJavac"/>                              
                                <javac srcdir="${basedir}/../index-gui/src/main/java" compiler="extJavac"
                                 destdir="${project.build.testOutputDirectory}" classpathref="maven.test.classpath" >
                                    <include name="com/sun/mdm/index/project/anttasks/ObjectGeneratorTask.java"/>
                                </javac>
                                
                                <copy todir="${project.build.testOutputDirectory}">
                                    <fileset dir="${basedir}/../index-gui/src/main/java">
                                        <include name="com/sun/mdm/index/project/generator/**/*.tmpl"/>
                                    </fileset>
                                </copy>
                                
                                <!--mkdir dir="${project.build.testOutputDirectory}/modules/ext/eview"/>
                                <jar destfile="${project.build.testOutputDirectory}/modules/ext/eview/index-core.jar" 
                                basedir="${project.build.directory}/classes"/>
                                <copy todir="${project.build.testOutputDirectory}/modules/ext/eview">
                                    <fileset dir="${basedir}/src/main/resources/globalization">
                                        <include name="net.java.hulp.i18n.jar"/>                 
                                        <include name="net.java.hulp.i18ntask.jar"/>                 
                                    </fileset>
                                    <fileset dir="${basedir}/src/main/resources/matchengine">
                                        <include name="sun_matcher.jar"/>
                                    </fileset>
                                </copy>
                                <copy todir="${project.build.testOutputDirectory}/modules/ext/eview/repository">
                                    <fileset dir="${project.build.directory}">
                                        <include name="ejb-source.zip"/>
                                    </fileset>
                                     <fileset dir="${basedir}/src/main/resources">
                                        <include name="edm.war"/>
                                    </fileset>
                                    <fileset dir="${basedir}/src/main/resources/matchengine">
                                        <include name="stc_sbme.jar"/>
                                    </fileset>
                                </copy>
                                                             
                                <delete dir="${project.build.testOutputDirectory}/eindex"/>
                                <copy todir="${project.build.testOutputDirectory}/eindex">
                                    <fileset dir="${basedir}/src/test/eindex-templates/eindex"/>
                                </copy>
                                <taskdef name="propertyfile" classname="org.apache.tools.ant.taskdefs.optional.PropertyFile">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <mkdir dir="${project.build.testOutputDirectory}/eindex/nbproject/private"/>
                                <propertyfile file="${project.build.testOutputDirectory}/eindex/nbproject/private/private.properties">
                                    <entry key="module.install.dir"
                                        value="${project.build.testOutputDirectory}/modules"/>
                                </propertyfile>
                                <mkdir dir="${project.build.testOutputDirectory}/eindex/eindex-ejb/nbproject/private"/>
                                <propertyfile file="${project.build.testOutputDirectory}/eindex/eindex-ejb/nbproject/private/private.properties">
                                    <entry key="j2ee.platform.classpath"
                                        value="${settings.localRepository}/javaee/javaee-api/5/javaee-api-5.jar"/>
                                </propertyfile>

                                 <path id="mdm_gen_classpath">
                                    <path refid="maven.test.classpath"/>
                                </path>
                                <ant antfile="${project.build.testOutputDirectory}/eindex/build.xml" 
                                    target="gen-mdm-index-files" inheritAll="false" inheritrefs="false">                                   
                                    <property name="mdm.gen.classpath" refid="maven.test.classpath"/>
                                </ant>
                                <ant antfile="${project.build.testOutputDirectory}/eindex/build.xml" 
                                    target="dist" inheritAll="false" inheritrefs="false">
                                    <property name="mdm.gen.classpath" refid="maven.test.classpath"/>
                                    <property name="build.compiler" value="extJavac"/>
                                </ant>
                                <copy todir="${project.build.testOutputDirectory}">
                                    <fileset dir="${project.build.testOutputDirectory}/eindex/eindex-ejb/build/jar"/>
                                </copy!-->
                                 <taskdef name="object-gen" classname="com.sun.mdm.index.project.anttasks.ObjectGeneratorTask">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <mkdir dir="${project.build.testOutputDirectory}/src"/>
                                <object-gen destdir="${project.build.testOutputDirectory}/src" objectFile="${basedir}/src/test/eindex-templates/eindex/src/Configuration/object.xml">
                                </object-gen>
                                <copy todir="${project.build.testOutputDirectory}/src">
                                    <fileset dir="${basedir}/src/test/eindex-templates/eindex/eindex-ejb/src/java">
                                        <include name="**/*.java"/>
                                    </fileset>
                                </copy>
                                <javac srcdir="${project.build.testOutputDirectory}/src" compiler="extJavac"
                                 destdir="${project.build.testOutputDirectory}" classpathref="maven.test.classpath" >
                                </javac>
                                <echo message="##### [EIndex Project is generated.] #####"/>
                            </tasks>          
                        </configuration>
                    </execution>
                                
                    <execution>
                        <id>copy-JUnit-test-resource-files</id>
                        <phase>generate-test-sources</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                                <unzip src="${settings.localRepository}/mural/matcher-resources/1.0/matcher-resources-1.0.jar" 
                                    dest="${project.build.testOutputDirectory}"/>
                                <copy todir="${project.build.directory}/test-classes">
                                    <fileset dir="${basedir}/src/test/java">
                                        <exclude name="**/*.java"/>
                                    </fileset>
                                </copy>
                                <copy todir="${project.build.directory}/test-classes">
                                    <fileset dir="${basedir}/src/main/resources/matchengine/config/runtime">
                                        <exclude name="match/**"/>
                                    </fileset>
                                </copy>
                                <copy todir="${project.build.directory}/test-classes">
                                    <fileset dir="${basedir}/src/test/eindex-templates/eindex/src/Configuration">
                                    </fileset>
                                </copy>
                                <copy todir="${project.build.directory}/test-classes/com/sun/mdm/standardizer">
                                    <fileset dir="${basedir}/src/main/resources/matchengine/standardizer">
                                        <include name="repositoryImage.zip"/>
                                    </fileset>
                                </copy>
                                                                        
                                <!--pathconvert property="run.test.classpath" refid="maven.test.classpath" />
                                <pathconvert property="compile.classpath" refid="maven.compile.classpath" />
                                <pathconvert property="localRepository.path">
                                    <path location="${settings.localRepository}"/>
                                </pathconvert>
                                <pathconvert property="build.dir">
                                    <path location="${project.build.directory}"/>
                                </pathconvert>
                                <pathconvert property="test.src.dir">
                                    <path location="${project.build.testSourceDirectory}"/>
                                </pathconvert>
                                <pathconvert property="build.test.classes.dir">
                                    <path location="${project.build.testOutputDirectory}"/>
                                </pathconvert>
                                <taskdef name="propertyfile" classname="org.apache.tools.ant.taskdefs.optional.PropertyFile">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <propertyfile file="${build.dir}/junit-test.properties">
                                    <entry key="build.dir" value="${build.dir}"/>
                                    <entry key="test.src.dir" value="${test.src.dir}"/>
                                    <entry key="build.test.classes.dir" value="${build.test.classes.dir}"/>                                    
                                    <entry key="run.test.classpath" value="${run.test.classpath}"/>
                                    <entry key="compile.classpath" value="${compile.classpath}"/>
                                    <entry key="localRepository.path" value="${localRepository.path}"/>
                                </propertyfile--> 
                            </tasks>          
                        </configuration>
                    </execution>
                    <execution>
                        <id>run-JUnit-test</id>
                        <phase>test</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <tasks>
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <taskdef name="propertyfile" classname="org.apache.tools.ant.taskdefs.optional.PropertyFile">
                                    <classpath refid="maven.test.classpath"/>
                                </taskdef>
                                <!-->You may overwrite database properties in 
                                ProxyJNDI.properties.Oracle file and ProxyJNDI.properties.SQLServer 
                                file by setting corresponding properties in setting.xml file<-->
                                <if>
                                    <equals arg1="${database.properties.overwrite}" 
                                            arg2="true" />
                                <then>
                                    <propertyfile file="${project.build.directory}/test-classes/com/sun/mdm/index/util/ejbproxy/ProxyJNDI.properties.Oracle">
                                        <entry key="proxy.datasource.user.id" value="${oracle.datasource.user.id}"/>
                                        <entry key="proxy.datasource.password" value="${oracle.datasource.password}"/>
                                        <entry key="proxy.datasource.port.number" value="${oracle.datasource.port.number}"/>                                    
                                        <entry key="proxy.datasource.server.name" value="${oracle.datasource.server.name}"/>
                                        <entry key="proxy.datasource.name" value="${oracle.datasource.name}"/>
                                    </propertyfile>
                                    <propertyfile file="${project.build.directory}/test-classes/com/sun/mdm/index/util/ejbproxy/ProxyJNDI.properties.SQLServer">
                                        <entry key="proxy.datasource.user.id" value="${sqlserver.datasource.user.id}"/>
                                        <entry key="proxy.datasource.password" value="${sqlserver.datasource.password}"/>
                                        <entry key="proxy.datasource.port.number" value="${sqlserver.datasource.port.number}"/>                                    
                                        <entry key="proxy.datasource.server.name" value="${sqlserver.datasource.server.name}"/>
                                        <entry key="proxy.datasource.name" value="${sqlserver.datasource.name}"/>
                                    </propertyfile> 
                                </then>
                                </if>
                                
                                <if>
                                    <equals arg1="${env.RUN_JUNIT}" arg2="oracle" />
                                <then>
                                    <echo>::Oracle JUnit Test</echo>
                                    <ant antfile="junitTest.xml" target="runtests_oracle">
                                        <property name="build.dir" value="${project.build.directory}"/>
                                        <property name="test.src.dir" value="${project.build.testSourceDirectory}"/>
                                        <property name="build.test.classes.dir" value="${project.build.testOutputDirectory}"/>
                                        <property name="run.test.classpath" refid="maven.test.classpath"/>
                                        <property name="compile.classpath" refid="maven.compile.classpath"/>
                                        <property name="localRepository.path" value="${settings.localRepository}"/>
                                    </ant>
                                </then>                                
                                <elseif>
                                    <equals arg1="${env.RUN_JUNIT}" arg2="sqlserver" />
                                <then>
                                    <echo>::SQL Server JUnit Test</echo>
                                    <ant antfile="junitTest.xml" target="runtests_sqlserver">
                                        <property name="build.dir" value="${project.build.directory}"/>
                                        <property name="test.src.dir" value="${project.build.testSourceDirectory}"/>
                                        <property name="build.test.classes.dir" value="${project.build.testOutputDirectory}"/>
                                        <property name="run.test.classpath" refid="maven.test.classpath"/>
                                        <property name="compile.classpath" refid="maven.compile.classpath"/>
                                        <property name="localRepository.path" value="${settings.localRepository}"/>
                                    </ant>
                                </then>
                                </elseif>
                                <elseif>
                                    <equals arg1="${env.RUN_JUNIT}" arg2="all" />
                                <then>
                                    <echo>::ALL JUnit Test</echo>
                                    <ant antfile="junitTest.xml">
                                        <property name="build.dir" value="${project.build.directory}"/>
                                        <property name="test.src.dir" value="${project.build.testSourceDirectory}"/>
                                        <property name="build.test.classes.dir" value="${project.build.testOutputDirectory}"/>
                                        <property name="run.test.classpath" refid="maven.test.classpath"/>
                                        <property name="compile.classpath" refid="maven.compile.classpath"/>
                                        <property name="localRepository.path" value="${settings.localRepository}"/>
                                    </ant>
                                </then>
                                </elseif>                                  
                                <else>
                                    <echo>::NO JUnit Test</echo>
                                </else>
                                </if>                      
                            </tasks> 
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <executions>
                    <execution>
                        <id>install-matchengine</id>
                        <phase>process-resources</phase>
                        <goals><goal>install-file</goal></goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <packaging>jar</packaging>
                            <groupId>mural</groupId>
                            <artifactId>matchengine</artifactId>
                            <version>${mural.currentVersion}</version>
                            <file>${basedir}/src/main/resources/matchengine/stc_sbme.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-standardizer-api-jar</id>
                        <phase>process-resources</phase>
                        <goals><goal>install-file</goal></goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <packaging>jar</packaging>
                            <groupId>mural</groupId>
                            <artifactId>standardizer-api</artifactId>
                            <version>${mural.currentVersion}</version>
                            <file>${basedir}/src/main/resources/matchengine/standardizer/lib/standardizer-api.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-standardizer-impl-jar</id>
                        <phase>process-resources</phase>
                        <goals><goal>install-file</goal></goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <packaging>jar</packaging>
                            <groupId>mural</groupId>
                            <artifactId>standardizer-impl</artifactId>
                            <version>${mural.currentVersion}</version>
                            <file>${basedir}/src/main/resources/matchengine/standardizer/lib/standardizer-impl.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-inti-components-jar</id>
                        <phase>process-resources</phase>
                        <goals><goal>install-file</goal></goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <packaging>jar</packaging>
                            <groupId>mural</groupId>
                            <artifactId>inti-components</artifactId>
                            <version>${mural.currentVersion}</version>
                            <file>${basedir}/src/main/resources/matchengine/standardizer/lib/inti-components-1.0.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-inti-container-api-jar</id>
                        <phase>process-resources</phase>
                        <goals><goal>install-file</goal></goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <packaging>jar</packaging>
                            <groupId>mural</groupId>
                            <artifactId>inti-container-api</artifactId>
                            <version>${mural.currentVersion}</version>
                            <file>${basedir}/src/main/resources/matchengine/standardizer/lib/inti-container-api-1.0.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-inti-container-impl-jar</id>
                        <phase>process-resources</phase>
                        <goals><goal>install-file</goal></goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <packaging>jar</packaging>
                            <groupId>mural</groupId>
                            <artifactId>inti-container-impl</artifactId>
                            <version>${mural.currentVersion}</version>
                            <file>${basedir}/src/main/resources/matchengine/standardizer/lib/inti-container-impl-1.0.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-i18n</id>
                        <phase>process-resources</phase>
                        <goals><goal>install-file</goal></goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <packaging>jar</packaging>
                            <groupId>mural</groupId>
                            <artifactId>i18n</artifactId>
                            <version>${mural.currentVersion}</version>
                            <file>${basedir}/src/main/resources/globalization/net.java.hulp.i18n.jar</file>
                        </configuration>
                    </execution>
                    <execution>
                        <id>install-spring-javaconfig</id>
                        <phase>process-resources</phase>
                        <goals><goal>install-file</goal></goals>
                        <configuration>
                            <generatePom>true</generatePom>
                            <packaging>jar</packaging>
                            <groupId>org.springframework.javaconfig</groupId>
                            <artifactId>spring-javaconfig</artifactId>
                            <version>1.0-m2</version>
                            <file>${basedir}/src/main/resources/matchengine/standardizer/lib/spring-javaconfig-1.0-m2.jar</file>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <skipExec>true</skipExec>
                </configuration>
            </plugin>
        </plugins>
    </build>
    <reporting>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-report-plugin</artifactId>
                <configuration>
                    <outputName>Open-dm-mi JUnit Test Report</outputName>
                </configuration>
            </plugin>
        </plugins>
    </reporting>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>3.8.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-junit</artifactId>
            <version>1.6.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ant-contrib</groupId>
            <artifactId>ant-contrib</artifactId>
            <version>1.0b2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ant</groupId>
            <artifactId>ant-nodeps</artifactId>
            <version>1.6.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>ant</groupId>
            <artifactId>ant</artifactId>
            <version>1.6.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>javax.script</groupId>
            <artifactId>script-api</artifactId>
            <version>1.0</version>
            <classifier>jdk14</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>aspectj</groupId>
            <artifactId>aspectjrt</artifactId>
            <version>1.5.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm</artifactId>
            <version>2.2.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-commons</artifactId>
            <version>2.2.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>asm</groupId>
            <artifactId>asm-tree</artifactId>
            <version>2.2.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>2.1.1</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.6</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-core</artifactId>
            <version>2.0.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-aop</artifactId>
            <version>2.0.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>2.0.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework.javaconfig</groupId>
            <artifactId>spring-javaconfig</artifactId>
            <version>1.0-m2</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>2.1_3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-support</artifactId>
            <version>2.0.5</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>msft.sqlserver.jdbc</groupId>
            <artifactId>sqljdbc</artifactId>
            <version>1.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>matchengine</artifactId>
            <version>${mural.currentVersion}</version>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>matcher</artifactId>
            <version>${mural.currentVersion}</version>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>matcher-resources</artifactId>
            <version>${mural.currentVersion}</version>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>standardizer-impl</artifactId>
            <version>${mural.currentVersion}</version>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>standardizer-api</artifactId>
            <version>${mural.currentVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>inti-components</artifactId>
            <version>${mural.currentVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>inti-container-api</artifactId>
            <version>${mural.currentVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>inti-container-impl</artifactId>
            <version>${mural.currentVersion}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>mural</groupId>
            <artifactId>i18n</artifactId>
            <version>${mural.currentVersion}</version>
        </dependency>
        <dependency>
            <groupId>oracle.jdbc</groupId>
            <artifactId>ojdbc14</artifactId>
            <version>10.1.0.2.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>javaee</groupId>
            <artifactId>javaee-api</artifactId>
            <version>5</version>
            <scope>provided</scope>
        </dependency>
    </dependencies>
</project>
